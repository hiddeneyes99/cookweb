{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nCookPhish is an advanced phishing simulation framework designed for cybersecurity education and ethical hacking training. This full-stack application provides a comprehensive platform for demonstrating social engineering techniques through Instagram clone simulations, featuring 2FA bypass capabilities, IP logging, and tunneling support. The project serves as an educational tool for security professionals to understand and defend against phishing attacks.\n\n## Recent Updates (January 2025)\n- ✅ Complete installation section redesign with step-by-step commands and individual copy buttons\n- ✅ Added direct download button with GitHub releases link (v3.0.0)\n- ✅ Implemented GitHub star/follow prompts in installation section\n- ✅ Redesigned video tutorials with clickable thumbnails (HACK1.png, HACK3.png)\n- ✅ Created Pro coming soon page with social media links and features preview\n- ✅ Added responsive header navigation with Home/Pro links\n- ✅ Made CookPhish header clickable for home navigation\n- ✅ Comprehensive SEO optimization with meta tags and Open Graph\n- ✅ Full responsive design for all devices (mobile, tablet, desktop)\n- ✅ Enhanced patriotic Indian theme with Ahmar's personal branding\n- ✅ **Project Migration to Replit (January 18, 2025)**\n  - Removed desktop detection feature causing mobile scroll glitches\n  - Optimized animations and performance for mobile/tablet devices\n  - Reduced loading times with faster loading screen\n  - Implemented scroll throttling with requestAnimationFrame\n  - Reduced particle system intensity on mobile devices\n  - Disabled heavy CSS animations on mobile for better performance\n  - Added mobile-specific optimizations for blur effects and transforms\n- ✅ **Comprehensive Setup Guides and Features (January 18, 2025)**\n  - Enhanced mobile/desktop navigation with responsive GitHub and YouTube buttons\n  - Added comprehensive Android (Termux) installation guide with APK download links\n  - Enhanced Kali Linux installation guide with detailed explanations\n  - Implemented GitHub star notification component with timer-based display\n  - Added interactive like button with local storage persistence\n  - Created comprehensive usage instructions section with cookie-based login details\n  - Added detailed 2FA bypass methods and data collection information\n  - Improved step-by-step installation commands with explanatory descriptions\n- ✅ **Project Migration Completed (August 18, 2025)**\n  - Successfully migrated CookPhish framework to Replit environment\n  - Installed all required Node.js dependencies including tsx executor\n  - Server now running successfully on port 5000 with proper client/server separation\n  - Applied UI improvements: darkened Cookie-Based Login Feature card background for better visibility\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe application uses a modern React-based frontend built with TypeScript and Vite. The UI is implemented using Shadcn/UI components with Radix UI primitives, providing a comprehensive design system with dark mode support. The frontend features a cyberpunk/hacker aesthetic with custom CSS animations including matrix rain effects and particle systems.\n\n**Key Technologies:**\n- React 18 with TypeScript\n- Vite for build tooling and development server\n- Wouter for client-side routing\n- TanStack Query for server state management\n- Framer Motion for animations\n- Tailwind CSS for styling with custom cyberpunk theme\n\n**Component Structure:**\n- Modular UI components using Shadcn/UI\n- Custom cyberpunk-themed components (MatrixRain, ParticleSystem, TerminalWindow)\n- Loading screens with progress indicators\n- Sound effects system using Web Audio API\n- Responsive design with mobile support\n\n## Backend Architecture\nThe backend follows a simple Express.js REST API architecture with middleware for logging and error handling. The server provides endpoints for tool information and installation commands, designed to support the educational nature of the phishing simulation framework.\n\n**Core Features:**\n- Express.js server with TypeScript\n- RESTful API endpoints\n- Request/response logging middleware\n- Error handling with proper status codes\n- Development mode integration with Vite HMR\n\n## Data Storage Solutions\nThe application uses a hybrid storage approach with PostgreSQL as the primary database through Drizzle ORM, complemented by in-memory storage for development and testing.\n\n**Database Configuration:**\n- PostgreSQL with Neon Database serverless connection\n- Drizzle ORM for type-safe database operations\n- Migration system using drizzle-kit\n- User schema with UUID primary keys and unique constraints\n\n**Storage Interface:**\n- Abstract storage interface for CRUD operations\n- In-memory storage implementation for development\n- User management with username/password authentication\n\n## Session Management\nThe application implements session-based authentication using PostgreSQL session storage with connect-pg-simple, providing secure user state management across requests.\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL hosting for production data persistence\n- **PostgreSQL**: Primary database engine for user data and application state\n\n## UI and Styling Libraries\n- **Shadcn/UI**: Complete component library built on Radix UI primitives\n- **Radix UI**: Unstyled, accessible UI primitives for React\n- **Tailwind CSS**: Utility-first CSS framework with custom cyberpunk theme\n- **Lucide React**: Icon library for consistent iconography\n\n## Development and Build Tools\n- **Vite**: Fast build tool and development server with HMR support\n- **TypeScript**: Type safety across the entire application\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **PostCSS**: CSS processing with Tailwind CSS integration\n\n## Animation and Audio\n- **Framer Motion**: Physics-based animation library for UI transitions\n- **Web Audio API**: Browser-native audio for cyberpunk sound effects\n- **Custom Audio Manager**: Abstraction layer for sound effect management\n\n## Development Integrations\n- **Replit**: Cloud development environment with specialized plugins\n- **Replit Cartographer**: Development mapping and navigation tools\n- **Runtime Error Overlay**: Enhanced error reporting during development\n\n## State Management and Data Fetching\n- **TanStack Query**: Powerful data synchronization for server state\n- **React Hook Form**: Form state management with validation\n- **Zod**: Runtime type validation and schema parsing","size_bytes":6599},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"purple-primary\": \"var(--purple-primary)\",\n        \"purple-light\": \"var(--purple-light)\",\n        \"purple-dark\": \"var(--purple-dark)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        orbitron: [\"var(--font-orbitron)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"matrix-rain\": {\n          \"0%\": {\n            transform: \"translateY(-100vh)\",\n            opacity: \"1\",\n          },\n          \"100%\": {\n            transform: \"translateY(100vh)\",\n            opacity: \"0\",\n          },\n        },\n        \"glow-pulse\": {\n          \"0%\": {\n            boxShadow: \"0 0 20px var(--matrix), 0 0 40px var(--matrix), 0 0 60px var(--matrix)\",\n          },\n          \"100%\": {\n            boxShadow: \"0 0 10px var(--matrix), 0 0 20px var(--matrix), 0 0 30px var(--matrix)\",\n          },\n        },\n        float: {\n          \"0%, 100%\": {\n            transform: \"translateY(0px) rotate(0deg)\",\n          },\n          \"33%\": {\n            transform: \"translateY(-20px) rotate(1deg)\",\n          },\n          \"66%\": {\n            transform: \"translateY(-10px) rotate(-1deg)\",\n          },\n        },\n        \"cyber-bounce\": {\n          \"0%\": {\n            transform: \"scale(0.8) rotateY(0deg)\",\n            opacity: \"0\",\n          },\n          \"50%\": {\n            transform: \"scale(1.05) rotateY(180deg)\",\n            opacity: \"0.8\",\n          },\n          \"100%\": {\n            transform: \"scale(1) rotateY(360deg)\",\n            opacity: \"1\",\n          },\n        },\n        \"scan-line\": {\n          \"0%\": {\n            transform: \"translateX(-100%)\",\n          },\n          \"100%\": {\n            transform: \"translateX(100vw)\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"matrix-rain\": \"matrix-rain 2s linear infinite\",\n        \"glow-pulse\": \"glow-pulse 2s ease-in-out infinite alternate\",\n        float: \"float 6s ease-in-out infinite\",\n        \"cyber-bounce\": \"cyber-bounce 1s ease-out\",\n        \"scan-line\": \"scan-line 2s linear infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4610},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // API route for getting tool information\n  app.get(\"/api/tool-info\", (req, res) => {\n    const toolInfo = {\n      name: \"CookPhish\",\n      version: \"v3.0.0\",\n      author: \"Technical White Hat\",\n      description: \"Advanced Instagram Phishing Simulation Framework\",\n      features: [\n        \"Instagram Clone\",\n        \"2FA Bypass\",\n        \"IP Logging\", \n        \"Tunneling Support\",\n        \"Auto-Update\",\n        \"Dynamic UI\"\n      ],\n      platforms: [\"Termux\", \"Kali Linux\", \"Debian\"],\n      github: \"https://github.com/technicalwhitehat-yt/CookPhish\"\n    };\n    \n    res.json(toolInfo);\n  });\n\n  // API route for getting installation commands\n  app.get(\"/api/installation-commands\", (req, res) => {\n    const commands = {\n      termux: [\n        \"pkg update && pkg upgrade -y\",\n        \"pkg install git\",\n        \"git clone https://github.com/technicalwhitehat-yt/CookPhish.git\",\n        \"cd CookPhish\",\n        \"bash CookPhish\"\n      ],\n      kali: [\n        \"sudo apt-get update && upgrade -y\",\n        \"apt-get install git\",\n        \"git clone https://github.com/technicalwhitehat-yt/CookPhish.git\",\n        \"cd CookPhish\", \n        \"sudo bash CookPhish\"\n      ],\n      requirements: \"pip install -r requirements.txt\"\n    };\n    \n    res.json(commands);\n  });\n\n  // API route for getting social media links\n  app.get(\"/api/social-links\", (req, res) => {\n    const socialLinks = {\n      youtube: \"https://youtube.com/@technicalwhitehat\",\n      instagram: \"https://instagram.com/technicalwhitehat\",\n      telegram: \"https://t.me/technicalwhitehat\",\n      github: \"https://github.com/technicalwhitehat-yt\",\n      email: \"technicalwhitehat@protonmail.com\"\n    };\n    \n    res.json(socialLinks);\n  });\n\n  // Health check endpoint\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ \n      status: \"ok\", \n      timestamp: new Date().toISOString(),\n      uptime: process.uptime()\n    });\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2165},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route, Link, useLocation } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\n\nimport Home from \"@/pages/Home\";\nimport Pro from \"@/pages/Pro\";\nimport NotFound from \"@/pages/not-found\";\nimport { useEffect, useState } from \"react\";\n\nfunction Header() {\n  const [location] = useLocation();\n  \n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 bg-black/20 backdrop-blur-md border-b border-white/10\">\n        <div className=\"flex items-center justify-between container mx-auto px-4 sm:px-6 py-4\">\n          <Link href=\"/\" className=\"text-xl sm:text-2xl font-bold text-white hover:text-purple-400 transition-colors duration-300\" data-testid=\"header-logo\">\n            CookPhish\n          </Link>\n          \n          <nav className=\"flex items-center space-x-3 sm:space-x-6\">\n            <Link href=\"/\" className={`text-sm sm:text-base text-white/80 hover:text-white transition-colors duration-300 ${location === '/' ? 'text-white font-semibold' : ''}`} data-testid=\"nav-home\">\n              Home\n            </Link>\n            <Link href=\"/pro\" className={`text-sm sm:text-base text-white/80 hover:text-white transition-colors duration-300 ${location === '/pro' ? 'text-white font-semibold' : ''}`} data-testid=\"nav-pro\">\n              Pro\n            </Link>\n            \n            {/* Mobile buttons - Show both Get Started and YouTube */}\n            <div className=\"flex sm:hidden space-x-2\">\n              <a\n                href=\"https://github.com/technicalwhitehat-yt/CookPhish\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"px-3 py-1.5 bg-white/10 border border-white/20 rounded-lg text-white text-xs hover:bg-white/20 transition-colors flex items-center\"\n                data-testid=\"mobile-github-btn\"\n              >\n                <i className=\"fab fa-github mr-1\"></i>\n                <span>Get Started</span>\n              </a>\n              <a\n                href=\"https://youtube.com/@technicalwhitehat\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"px-3 py-1.5 bg-red-500 border border-red-400 rounded-lg text-white text-xs hover:bg-red-600 transition-colors flex items-center\"\n                data-testid=\"mobile-youtube-btn\"\n              >\n                <i className=\"fab fa-youtube mr-1\"></i>\n                <span>YouTube</span>\n              </a>\n            </div>\n            \n            {/* Desktop buttons - Show GitHub, YouTube, and Pro */}\n            <div className=\"hidden sm:flex space-x-3\">\n              <a\n                href=\"https://github.com/technicalwhitehat-yt/CookPhish\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"px-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white text-sm hover:bg-white/20 transition-colors flex items-center space-x-2\"\n                data-testid=\"desktop-github-btn\"\n              >\n                <i className=\"fab fa-github\"></i>\n                <span>Get Started</span>\n              </a>\n              <a\n                href=\"https://youtube.com/@technicalwhitehat\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"px-4 py-2 bg-red-500 border border-red-400 rounded-lg text-white text-sm hover:bg-red-600 transition-colors flex items-center space-x-2\"\n                data-testid=\"desktop-youtube-btn\"\n              >\n                <i className=\"fab fa-youtube\"></i>\n                <span>YouTube</span>\n              </a>\n              <Link\n                href=\"/pro\"\n                className=\"px-4 py-2 bg-gradient-to-r from-purple-500/20 to-pink-500/20 border border-purple-400/30 rounded-lg text-white text-sm hover:from-purple-500/30 hover:to-pink-500/30 transition-colors flex items-center space-x-2\"\n                data-testid=\"desktop-pro-btn\"\n              >\n                <i className=\"fas fa-crown text-purple-400\"></i>\n                <span>Pro</span>\n              </Link>\n            </div>\n          </nav>\n        </div>\n    </header>\n  );\n}\n\nfunction SEOHead({ title, description, path }: { title: string; description: string; path: string }) {\n  useEffect(() => {\n    // Update title\n    document.title = title;\n    \n    // Update meta description\n    let metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (!metaDescription) {\n      metaDescription = document.createElement('meta');\n      metaDescription.setAttribute('name', 'description');\n      document.head.appendChild(metaDescription);\n    }\n    metaDescription.setAttribute('content', description);\n    \n    // Update Open Graph tags\n    const ogTags = [\n      { property: 'og:title', content: title },\n      { property: 'og:description', content: description },\n      { property: 'og:type', content: 'website' },\n      { property: 'og:url', content: `${window.location.origin}${path}` },\n      { property: 'og:site_name', content: 'CookPhish' },\n      { name: 'twitter:card', content: 'summary_large_image' },\n      { name: 'twitter:title', content: title },\n      { name: 'twitter:description', content: description },\n    ];\n    \n    ogTags.forEach(tag => {\n      const key = tag.property || tag.name;\n      const value = tag.content;\n      if (key && value) {\n        let element = document.querySelector(`meta[${tag.property ? 'property' : 'name'}=\"${key}\"]`);\n        if (!element) {\n          element = document.createElement('meta');\n          element.setAttribute(tag.property ? 'property' : 'name', key);\n          document.head.appendChild(element);\n        }\n        element.setAttribute('content', value);\n      }\n    });\n  }, [title, description, path]);\n  \n  return null;\n}\n\n\n\nfunction Router() {\n  const [location] = useLocation();\n  \n  return (\n    <Switch>\n      <Route path=\"/\">\n        <SEOHead \n          title=\"CookPhish - Advanced Phishing Simulation Framework | Educational Cybersecurity Tool\"\n          description=\"CookPhish is a comprehensive phishing simulation framework for cybersecurity education, ethical hacking training, and authorized penetration testing. Created by Ahmar from Technical White Hat.\"\n          path=\"/\"\n        />\n        <Home />\n      </Route>\n      <Route path=\"/pro\">\n        <SEOHead \n          title=\"CookPhish Pro - Coming Soon | Unlimited Features & Advanced Security Tools\"\n          description=\"Get ready for CookPhish Pro with unlimited features, advanced security tools, AI integration, and zero limitations. Professional-grade phishing simulation framework.\"\n          path=\"/pro\"\n        />\n        <Pro />\n      </Route>\n      <Route>\n        <SEOHead \n          title=\"Page Not Found | CookPhish\"\n          description=\"The page you're looking for doesn't exist. Return to CookPhish home page for cybersecurity education and phishing simulation tools.\"\n          path=\"/404\"\n        />\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <div className=\"min-h-screen modern-bg\">\n          <Header />\n          <div className=\"pt-16 sm:pt-20\">\n            <Toaster />\n            <Router />\n          </div>\n        </div>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":7519},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Mobile optimizations */\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n/* Prevent horizontal scroll on mobile */\n* {\n  box-sizing: border-box;\n}\n\n/* Mobile container fixes */\n@media (max-width: 768px) {\n  .container {\n    padding-left: 1rem !important;\n    padding-right: 1rem !important;\n    max-width: 100% !important;\n  }\n  \n  /* Fix for text wrapping */\n  h1, h2, h3, h4, h5, h6 {\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n    hyphens: auto;\n  }\n  \n  /* Card responsive fixes */\n  .card {\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n  }\n  \n  /* Section spacing fixes */\n  section {\n    padding-top: 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  \n  /* Grid fixes for mobile */\n  .grid {\n    gap: 1rem !important;\n  }\n  \n  /* Button responsive fixes */\n  .btn {\n    padding: 0.5rem 1rem;\n    font-size: 0.875rem;\n  }\n  \n  /* Text sizing for mobile */\n  .text-5xl, .text-6xl {\n    font-size: 2.5rem !important;\n    line-height: 1.1;\n  }\n  \n  .text-4xl {\n    font-size: 2rem !important;\n    line-height: 1.2;\n  }\n  \n  .text-3xl {\n    font-size: 1.75rem !important;\n    line-height: 1.3;\n  }\n  \n  .text-2xl {\n    font-size: 1.5rem !important;\n    line-height: 1.3;\n  }\n  \n  .text-xl {\n    font-size: 1.125rem !important;\n    line-height: 1.4;\n  }\n}\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(222.2, 84%, 4.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222.2, 84%, 4.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222.2, 84%, 4.9%);\n  --primary: hsl(259, 94%, 51%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(210, 40%, 96%);\n  --secondary-foreground: hsl(222.2, 84%, 4.9%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(215.4, 16.3%, 46.9%);\n  --accent: hsl(259, 94%, 51%);\n  --accent-foreground: hsl(222.2, 84%, 4.9%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(214.3, 31.8%, 91.4%);\n  --input: hsl(214.3, 31.8%, 91.4%);\n  --ring: hsl(259, 94%, 51%);\n  --chart-1: hsl(259, 94%, 51%);\n  --chart-2: hsl(280, 100%, 70%);\n  --chart-3: hsl(240, 100%, 80%);\n  --chart-4: hsl(200, 100%, 70%);\n  --chart-5: hsl(320, 100%, 70%);\n  --sidebar: hsl(0, 0%, 98%);\n  --sidebar-foreground: hsl(222.2, 84%, 4.9%);\n  --sidebar-primary: hsl(259, 94%, 51%);\n  --sidebar-primary-foreground: hsl(210, 40%, 98%);\n  --sidebar-accent: hsl(210, 40%, 96%);\n  --sidebar-accent-foreground: hsl(222.2, 84%, 4.9%);\n  --sidebar-border: hsl(214.3, 31.8%, 91.4%);\n  --sidebar-ring: hsl(259, 94%, 51%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: 'Georgia', serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --font-display: 'Inter', sans-serif;\n  --radius: 0.5rem;\n  --purple-primary: hsl(259, 94%, 51%);\n  --purple-light: hsl(280, 100%, 70%);\n  --purple-dark: hsl(240, 100%, 30%);\n  --gradient-primary: linear-gradient(135deg, hsl(259, 94%, 51%) 0%, hsl(280, 100%, 70%) 100%);\n  --gradient-secondary: linear-gradient(135deg, hsl(240, 100%, 80%) 0%, hsl(200, 100%, 70%) 100%);\n}\n\n.dark {\n  --background: hsl(222.2, 84%, 4.9%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222.2, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222.2, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(259, 94%, 51%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(217.2, 32.6%, 17.5%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217.2, 32.6%, 17.5%);\n  --muted-foreground: hsl(215, 20.2%, 65.1%);\n  --accent: hsl(259, 94%, 51%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217.2, 32.6%, 17.5%);\n  --input: hsl(217.2, 32.6%, 17.5%);\n  --ring: hsl(259, 94%, 51%);\n  --sidebar: hsl(222.2, 84%, 4.9%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(259, 94%, 51%);\n  --sidebar-primary-foreground: hsl(210, 40%, 98%);\n  --sidebar-accent: hsl(217.2, 32.6%, 17.5%);\n  --sidebar-accent-foreground: hsl(210, 40%, 98%);\n  --sidebar-border: hsl(217.2, 32.6%, 17.5%);\n  --sidebar-ring: hsl(259, 94%, 51%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n    font-family: var(--font-sans);\n    overflow-x: hidden;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: optimizeLegibility;\n  }\n  \n  /* Mobile optimization to prevent scrolling glitches */\n  html {\n    -webkit-text-size-adjust: 100%;\n    -moz-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n    text-size-adjust: 100%;\n  }\n  \n  /* Fix mobile scrolling issues */\n  @media (max-width: 768px) {\n    body {\n      -webkit-overflow-scrolling: touch;\n      scroll-behavior: smooth;\n    }\n    \n    .modern-bg {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n      -webkit-backface-visibility: hidden;\n      backface-visibility: hidden;\n      will-change: transform;\n    }\n    \n    /* Prevent element flickering on scroll */\n    * {\n      -webkit-transform: translateZ(0);\n      transform: translateZ(0);\n    }\n  }\n}\n\n@layer utilities {\n  .font-display {\n    font-family: var(--font-display);\n  }\n  \n  .font-mono {\n    font-family: var(--font-mono);\n  }\n  \n  .text-purple-primary {\n    color: var(--purple-primary);\n  }\n  \n  .text-purple-light {\n    color: var(--purple-light);\n  }\n  \n  .text-purple-dark {\n    color: var(--purple-dark);\n  }\n  \n  .bg-purple-primary {\n    background-color: var(--purple-primary);\n  }\n  \n  .bg-purple-light {\n    background-color: var(--purple-light);\n  }\n  \n  .bg-purple-dark {\n    background-color: var(--purple-dark);\n  }\n  \n  .gradient-primary {\n    background: var(--gradient-primary);\n  }\n  \n  .gradient-secondary {\n    background: var(--gradient-secondary);\n  }\n\n  .glow-card {\n    box-shadow: 0 0 20px rgba(147, 51, 234, 0.2), 0 4px 15px rgba(0, 0, 0, 0.2);\n  }\n\n  .glow-card:hover {\n    box-shadow: 0 0 30px rgba(147, 51, 234, 0.4), 0 8px 25px rgba(0, 0, 0, 0.3);\n  }\n\n  .glow-button {\n    box-shadow: 0 0 15px rgba(147, 51, 234, 0.3);\n  }\n\n  .glow-button:hover {\n    box-shadow: 0 0 25px rgba(147, 51, 234, 0.5);\n  }\n\n  .purple-glow {\n    text-shadow: 0 0 10px rgba(147, 51, 234, 0.5);\n  }\n\n  .image-purple-glow {\n    box-shadow: \n      0 0 30px rgba(147, 51, 234, 0.4),\n      0 0 60px rgba(147, 51, 234, 0.3),\n      0 0 90px rgba(147, 51, 234, 0.2),\n      inset 0 0 20px rgba(147, 51, 234, 0.1);\n    border-radius: 1rem;\n    position: relative;\n  }\n\n  .image-purple-glow::before {\n    content: '';\n    position: absolute;\n    inset: -2px;\n    background: linear-gradient(45deg, \n      rgba(147, 51, 234, 0.5), \n      rgba(168, 85, 247, 0.3), \n      rgba(147, 51, 234, 0.5)\n    );\n    border-radius: 1rem;\n    z-index: -1;\n    filter: blur(10px);\n  }\n\n  .animated-button {\n    position: relative;\n    overflow: hidden;\n    transition: all 0.4s ease;\n    transform: perspective(1px) translateZ(0);\n  }\n\n  .animated-button::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.5s;\n  }\n\n  .animated-button:hover::before {\n    left: 100%;\n  }\n\n  .animated-button:hover {\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 0 30px rgba(147, 51, 234, 0.6);\n  }\n\n  .modern-button {\n    position: relative;\n    overflow: hidden;\n    border-radius: 12px;\n    font-weight: 600;\n    letter-spacing: 0.025em;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transform: perspective(1px) translateZ(0);\n  }\n\n  .modern-button::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    border-radius: inherit;\n    padding: 2px;\n    background: linear-gradient(135deg, \n      rgba(147, 51, 234, 0.8), \n      rgba(168, 85, 247, 0.6), \n      rgba(124, 58, 237, 0.8)\n    );\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    mask-composite: xor;\n    z-index: -1;\n  }\n\n  .modern-button:hover {\n    transform: translateY(-3px) scale(1.02);\n    box-shadow: \n      0 10px 25px rgba(147, 51, 234, 0.4),\n      0 0 40px rgba(147, 51, 234, 0.3);\n  }\n\n  .modern-button:active {\n    transform: translateY(-1px) scale(1.01);\n  }\n\n  .hero-button-primary {\n    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n    color: #652ca8;\n    border: none;\n    box-shadow: 0 4px 15px rgba(101, 44, 168, 0.2);\n    transition: all 0.3s ease;\n  }\n\n  .hero-button-primary i {\n    transition: all 0.3s ease;\n  }\n\n  .hero-button-primary:hover {\n    background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(101, 44, 168, 0.3);\n  }\n\n  .hero-button-primary:hover i {\n    transform: scale(1.3);\n    color: #652ca8;\n  }\n\n  .hero-button-secondary {\n    background: rgba(255, 255, 255, 0.1);\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    color: white;\n    backdrop-filter: blur(10px);\n    transition: all 0.3s ease;\n  }\n\n  .hero-button-secondary i {\n    transition: all 0.3s ease;\n  }\n\n  .hero-button-secondary:hover {\n    background: rgba(255, 255, 255, 0.2);\n    border-color: rgba(255, 255, 255, 0.5);\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(255, 255, 255, 0.1);\n  }\n\n  .hero-button-secondary:hover i {\n    transform: scale(1.3);\n    color: #ffffff;\n  }\n\n  .nav-button {\n    position: relative;\n    background: linear-gradient(135deg, rgba(147, 51, 234, 0.2), rgba(168, 85, 247, 0.15));\n    border: 2px solid rgba(147, 51, 234, 0.4);\n    color: white;\n    backdrop-filter: blur(15px);\n    font-size: 0.875rem;\n    font-weight: 500;\n    overflow: hidden;\n  }\n\n  .nav-button::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.4s ease;\n  }\n\n  .nav-button:hover::before {\n    left: 100%;\n  }\n\n  .nav-button:hover {\n    background: linear-gradient(135deg, rgba(147, 51, 234, 0.4), rgba(168, 85, 247, 0.3));\n    border-color: rgba(147, 51, 234, 0.7);\n    transform: translateY(-4px) scale(1.05);\n    box-shadow: \n      0 10px 25px rgba(147, 51, 234, 0.4),\n      0 0 40px rgba(147, 51, 234, 0.3),\n      inset 0 1px 0 rgba(255, 255, 255, 0.2);\n  }\n\n  .social-button {\n    background: rgba(255, 255, 255, 0.1);\n    border: 2px solid rgba(255, 255, 255, 0.2);\n    color: white;\n    backdrop-filter: blur(10px);\n    transition: all 0.3s ease;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .social-button i {\n    transition: all 0.3s ease;\n  }\n\n  .youtube-button:hover {\n    background: rgba(255, 0, 0, 0.2);\n    border-color: #ff0000;\n    box-shadow: 0 5px 15px rgba(255, 0, 0, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .youtube-button:hover i {\n    transform: scale(1.4);\n    color: #ff0000;\n  }\n\n  .instagram-button:hover {\n    background: rgba(225, 48, 108, 0.2);\n    border-color: #e1306c;\n    box-shadow: 0 5px 15px rgba(225, 48, 108, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .instagram-button:hover i {\n    transform: scale(1.4);\n    color: #e1306c;\n  }\n\n  .telegram-button:hover {\n    background: rgba(0, 136, 204, 0.2);\n    border-color: #0088cc;\n    box-shadow: 0 5px 15px rgba(0, 136, 204, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .telegram-button:hover i {\n    transform: scale(1.4);\n    color: #0088cc;\n  }\n\n  .github-button:hover {\n    background: rgba(255, 255, 255, 0.2);\n    border-color: #ffffff;\n    box-shadow: 0 5px 15px rgba(255, 255, 255, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .github-button:hover i {\n    transform: scale(1.4);\n    color: #ffffff;\n  }\n\n  .whatsapp-button:hover {\n    background: rgba(37, 211, 102, 0.2);\n    border-color: #25d366;\n    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .whatsapp-button:hover i {\n    transform: scale(1.4);\n    color: #25d366;\n  }\n\n  .indian-pride-bg {\n    background: linear-gradient(135deg, \n      rgba(255, 153, 51, 0.1) 0%,   /* Saffron */\n      rgba(255, 255, 255, 0.05) 35%,  /* White */\n      rgba(19, 136, 8, 0.1) 70%,    /* Green */\n      rgba(0, 0, 255, 0.05) 100%    /* Blue accent */\n    );\n    border: 2px solid rgba(255, 153, 51, 0.3);\n  }\n\n  .tricolor-border {\n    border-image: linear-gradient(90deg, #ff9933, #ffffff, #138808) 1;\n    border-width: 3px;\n    border-style: solid;\n  }\n\n  .indian-flag-glow {\n    box-shadow: \n      0 0 20px rgba(255, 153, 51, 0.3),\n      0 0 40px rgba(255, 255, 255, 0.1),\n      0 0 60px rgba(19, 136, 8, 0.3);\n  }\n\n  .magical-button {\n    background: rgba(147, 51, 234, 0.3);\n    border: 2px solid rgba(147, 51, 234, 0.5);\n    color: white;\n    backdrop-filter: blur(10px);\n    transition: all 0.3s ease;\n  }\n\n  .magical-button i {\n    transition: all 0.3s ease;\n  }\n\n  .magical-button:hover {\n    background: rgba(147, 51, 234, 0.5);\n    border-color: rgba(147, 51, 234, 0.8);\n    box-shadow: 0 5px 15px rgba(147, 51, 234, 0.4);\n    transform: translateY(-2px);\n  }\n\n  .magical-button:hover i {\n    transform: scale(1.4);\n    color: #9333ea;\n  }\n\n  .pulse-glow {\n    animation: pulseGlow 2s ease-in-out infinite;\n  }\n\n  @keyframes pulseGlow {\n    0%, 100% {\n      box-shadow: \n        0 0 20px rgba(147, 51, 234, 0.3),\n        0 4px 15px rgba(0, 0, 0, 0.1);\n    }\n    50% {\n      box-shadow: \n        0 0 35px rgba(147, 51, 234, 0.5),\n        0 8px 25px rgba(0, 0, 0, 0.2);\n    }\n  }\n\n  .nav-link-button {\n    position: relative;\n    font-weight: 500;\n    backdrop-filter: blur(10px);\n  }\n\n  .nav-link-button::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    width: 0;\n    height: 2px;\n    background: linear-gradient(90deg, #fef08a, #facc15);\n    transform: translateX(-50%);\n    transition: width 0.3s ease;\n  }\n\n  .nav-link-button:hover::before {\n    width: 80%;\n  }\n\n  .nav-link-button:hover {\n    transform: translateY(-1px);\n    text-shadow: 0 0 8px rgba(254, 240, 138, 0.5);\n  }\n\n  .copy-button {\n    padding: 10px 16px;\n    background: rgba(147, 51, 234, 0.3);\n    border: 2px solid rgba(147, 51, 234, 0.5);\n    border-radius: 10px;\n    color: white;\n    font-size: 13px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    backdrop-filter: blur(10px);\n  }\n\n  .copy-button i {\n    transition: all 0.3s ease;\n  }\n\n  .copy-button:hover {\n    background: rgba(147, 51, 234, 0.5);\n    border-color: rgba(147, 51, 234, 0.7);\n    box-shadow: 0 6px 20px rgba(147, 51, 234, 0.4);\n    transform: translateY(-2px);\n  }\n\n  .copy-button:hover i {\n    transform: scale(1.3);\n    color: #9333ea;\n  }\n\n  .copy-button:active {\n    transform: translateY(0);\n  }\n\n  /* Responsive Design - Optimized for mobile performance */\n  @media (max-width: 768px) {\n    body {\n      font-size: 14px;\n    }\n    \n    .container {\n      padding-left: 1rem;\n      padding-right: 1rem;\n    }\n    \n    .hero-button-primary,\n    .hero-button-secondary {\n      font-size: 0.9rem;\n      padding: 0.75rem 1.5rem;\n    }\n    \n    .social-button {\n      padding: 0.5rem 1rem;\n    }\n    \n    /* Disable heavy animations on mobile for better performance */\n    .pulse-glow {\n      animation: none;\n    }\n    \n    .animated-button:hover {\n      transform: none;\n      box-shadow: 0 0 15px rgba(147, 51, 234, 0.4);\n    }\n    \n    .modern-button:hover {\n      transform: translateY(-1px) scale(1.01);\n      box-shadow: 0 5px 15px rgba(147, 51, 234, 0.3);\n    }\n    \n    .nav-button:hover {\n      transform: translateY(-2px) scale(1.02);\n      box-shadow: 0 5px 15px rgba(147, 51, 234, 0.3);\n    }\n    \n    /* Reduce backdrop blur for better mobile performance */\n    .backdrop-blur-md {\n      backdrop-filter: blur(4px);\n    }\n    \n    .backdrop-blur-lg {\n      backdrop-filter: blur(6px);\n    }\n  }\n    \n    .copy-button {\n      padding: 0.5rem 0.75rem;\n      font-size: 0.75rem;\n    }\n    \n    .code-block {\n      overflow-x: auto;\n    }\n    \n    .code-block code {\n      font-size: 0.75rem;\n      white-space: nowrap;\n    }\n  }\n  \n  @media (max-width: 640px) {\n    .grid {\n      grid-template-columns: 1fr;\n    }\n    \n    .flex-wrap {\n      flex-direction: column;\n      align-items: stretch;\n    }\n    \n    .flex-wrap .social-button {\n      width: 100%;\n      justify-content: center;\n    }\n    \n    h1 {\n      font-size: 2.5rem;\n    }\n    \n    h2 {\n      font-size: 2rem;\n    }\n    \n    .text-6xl {\n      font-size: 3rem;\n    }\n    \n    .text-4xl {\n      font-size: 2.25rem;\n    }\n  }\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(-10px); \n  }\n}\n\n@keyframes gradientShift {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.modern-bg {\n  background: linear-gradient(135deg, #2d1050 0%, #1a0d2e 30%, #0f051a 70%, #050208 100%);\n  min-height: 100vh;\n}\n\n.purple-gradient {\n  background: linear-gradient(135deg, hsl(259, 94%, 51%) 0%, hsl(280, 100%, 70%) 100%);\n  background-size: 200% 200%;\n  animation: gradientShift 6s ease infinite;\n}\n\n.glass-card {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n.modern-card {\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  transition: all 0.3s ease;\n}\n\n.modern-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.gradient-text {\n  background: linear-gradient(135deg, hsl(259, 94%, 51%) 0%, hsl(280, 100%, 70%) 100%);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s ease-out;\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n.animate-pulse {\n  animation: pulse 2s ease-in-out infinite;\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(135deg, #2d1050 0%, #1a0d2e 30%, #0f051a 70%, #050208 100%);\n  z-index: 9999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.hidden {\n  display: none !important;\n}\n\n/* Code block styling */\n.code-block {\n  background: linear-gradient(145deg, #f8fafc, #e2e8f0);\n  border: 1px solid #cbd5e1;\n  border-radius: 12px;\n  position: relative;\n  overflow: hidden;\n}\n\n.code-block::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  background: linear-gradient(135deg, hsl(259, 94%, 51%) 0%, hsl(280, 100%, 70%) 100%);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .modern-card {\n    margin: 10px;\n  }\n}\n\n/* Accessibility */\n@media (prefers-reduced-motion: reduce) {\n  .animate-fade-in-up,\n  .animate-float,\n  .animate-pulse {\n    animation: none;\n  }\n  \n  .modern-card:hover {\n    transform: none;\n  }\n}\n","size_bytes":19804},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/GitHubStarNotification.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\n\nexport default function GitHubStarNotification() {\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    // Show notification after 30 seconds\n    const timer = setTimeout(() => {\n      setShowNotification(true);\n    }, 30000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleClose = () => {\n    setShowNotification(false);\n  };\n\n  const handleStar = () => {\n    window.open('https://github.com/technicalwhitehat-yt/CookPhish', '_blank');\n    setShowNotification(false);\n  };\n\n  return (\n    <AnimatePresence>\n      {showNotification && (\n        <motion.div\n          initial={{ opacity: 0, y: 50, scale: 0.9 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          exit={{ opacity: 0, y: 50, scale: 0.9 }}\n          className=\"fixed bottom-6 right-6 z-50 bg-gradient-to-r from-purple-600/90 to-purple-700/90 backdrop-blur-md border border-purple-400/50 rounded-2xl p-6 shadow-2xl shadow-purple-500/30 max-w-sm\"\n          data-testid=\"github-star-notification\"\n        >\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 bg-yellow-400/20 rounded-full flex items-center justify-center\">\n                <i className=\"fas fa-star text-yellow-400 text-xl\"></i>\n              </div>\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"text-white font-semibold mb-2\">Enjoying CookPhish?</h3>\n              <p className=\"text-white/80 text-sm mb-4\">\n                Give us a ⭐ on GitHub and follow on social media for updates!\n              </p>\n              <div className=\"flex space-x-2\">\n                <Button\n                  size=\"sm\"\n                  onClick={handleStar}\n                  className=\"bg-yellow-500 hover:bg-yellow-600 text-black font-semibold\"\n                  data-testid=\"star-github-btn\"\n                >\n                  <i className=\"fab fa-github mr-2\"></i>\n                  Star on GitHub\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  onClick={handleClose}\n                  className=\"text-white/80 hover:text-white hover:bg-white/10\"\n                  data-testid=\"dismiss-notification-btn\"\n                >\n                  Later\n                </Button>\n              </div>\n            </div>\n            <button\n              onClick={handleClose}\n              className=\"text-white/60 hover:text-white transition-colors\"\n              data-testid=\"close-notification-btn\"\n            >\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}","size_bytes":2900},"client/src/components/LikeButton.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\n\nexport default function LikeButton() {\n  const [likes, setLikes] = useState(0);\n  const [isLiked, setIsLiked] = useState(false);\n\n  useEffect(() => {\n    // Load likes from localStorage\n    const savedLikes = localStorage.getItem('cookphish-likes');\n    const userLiked = localStorage.getItem('cookphish-user-liked');\n    \n    if (savedLikes) {\n      setLikes(parseInt(savedLikes));\n    } else {\n      // Initialize with 0 likes (fresh start)\n      setLikes(0);\n    }\n    \n    setIsLiked(userLiked === 'true');\n  }, []);\n\n  const handleLike = () => {\n    if (!isLiked) {\n      const newLikes = likes + 1;\n      setLikes(newLikes);\n      setIsLiked(true);\n      localStorage.setItem('cookphish-likes', newLikes.toString());\n      localStorage.setItem('cookphish-user-liked', 'true');\n    } else {\n      const newLikes = Math.max(0, likes - 1);\n      setLikes(newLikes);\n      setIsLiked(false);\n      localStorage.setItem('cookphish-likes', newLikes.toString());\n      localStorage.setItem('cookphish-user-liked', 'false');\n    }\n  };\n\n  return (\n    <div \n      className=\"fixed bottom-4 right-4 z-[9999] pointer-events-auto\" \n      data-testid=\"like-button-container\"\n      style={{ \n        position: 'fixed',\n        bottom: '16px',\n        right: '16px',\n        zIndex: 9999\n      }}\n    >\n      <motion.div\n        whileHover={{ scale: 1.08 }}\n        whileTap={{ scale: 0.92 }}\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ \n          type: \"spring\",\n          stiffness: 260,\n          damping: 20\n        }}\n      >\n        <Button\n          onClick={handleLike}\n          className={`\n            flex items-center justify-center w-14 h-14 sm:w-16 sm:h-16\n            ${isLiked \n              ? 'bg-gradient-to-r from-red-500/90 to-pink-500/90 border-red-400/60 text-white shadow-2xl shadow-red-500/50' \n              : 'bg-gradient-to-r from-gray-800/90 to-gray-700/90 border-white/30 text-white/90 shadow-2xl shadow-black/50'\n            }\n            backdrop-blur-xl border-2 rounded-full transition-all duration-300 \n            hover:shadow-3xl hover:scale-105 active:scale-95\n            font-bold text-xs sm:text-sm\n          `}\n          data-testid=\"like-btn\"\n        >\n          <div className=\"flex flex-col items-center justify-center space-y-0.5\">\n            <motion.i \n              className={`fas fa-heart text-lg sm:text-xl ${isLiked ? 'text-white' : 'text-white/90'}`}\n              animate={isLiked ? { \n                scale: [1, 1.3, 1], \n                rotate: [0, 10, -10, 0] \n              } : {}}\n              transition={{ \n                duration: 0.5, \n                ease: \"easeOut\"\n              }}\n            ></motion.i>\n            <span className=\"text-xs font-black leading-none\">\n              {likes > 0 ? (likes > 999 ? `${Math.floor(likes/1000)}k` : likes) : '0'}\n            </span>\n          </div>\n        </Button>\n      </motion.div>\n    </div>\n  );\n}","size_bytes":3085},"client/src/components/LoadingScreen.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport MatrixRain from './MatrixRain';\n\ninterface LoadingScreenProps {\n  onComplete: () => void;\n}\n\nexport default function LoadingScreen({ onComplete }: LoadingScreenProps) {\n  const [progress, setProgress] = useState(0);\n  const [messageIndex, setMessageIndex] = useState(0);\n\n  const loadingMessages = [\n    'Initializing framework...',\n    'Loading phishing modules...',\n    'Setting up 2FA bypass...',\n    'Configuring IP logging...',\n    'Preparing tunneling protocols...',\n    'Framework ready!'\n  ];\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        const newProgress = prev + Math.random() * 20 + 5;\n        \n        if (newProgress >= 100) {\n          clearInterval(interval);\n          setTimeout(() => {\n            onComplete();\n          }, 1000);\n          return 100;\n        }\n        \n        // Update message based on progress\n        const newMessageIndex = Math.floor((newProgress / 100) * (loadingMessages.length - 1));\n        if (newMessageIndex !== messageIndex && newMessageIndex < loadingMessages.length) {\n          setMessageIndex(newMessageIndex);\n        }\n        \n        return newProgress;\n      });\n    }, 200);\n\n    return () => clearInterval(interval);\n  }, [onComplete, messageIndex, loadingMessages.length]);\n\n  return (\n    <div className=\"loading-overlay\" data-testid=\"loading-screen\">\n      <MatrixRain />\n      <div className=\"text-center z-10 relative\">\n        <motion.div \n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"text-6xl font-orbitron font-bold text-matrix mb-8 animate-glow-pulse\"\n          data-testid=\"loading-title\"\n        >\n          COOKPHISH\n        </motion.div>\n        \n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5, duration: 0.6 }}\n          className=\"text-xl font-mono mb-8\"\n          data-testid=\"loading-subtitle\"\n        >\n          Initializing Hacking Framework...\n        </motion.div>\n        \n        <motion.div \n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: 1, duration: 0.6 }}\n          className=\"w-64 h-2 bg-gray-800 rounded-full overflow-hidden mb-4\"\n        >\n          <div \n            className=\"h-full bg-gradient-to-r from-matrix to-cyber-blue transition-all duration-300\"\n            style={{ width: `${progress}%` }}\n            data-testid=\"progress-bar\"\n          />\n        </motion.div>\n        \n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.2, duration: 0.4 }}\n          className=\"mt-4 font-mono text-sm text-matrix\"\n          data-testid=\"loading-message\"\n        >\n          {loadingMessages[messageIndex]}\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3066},"client/src/components/MatrixRain.tsx":{"content":"import { useEffect, useRef } from 'react';\n\nexport default function MatrixRain() {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const createMatrixChar = () => {\n      const char = document.createElement('div');\n      char.className = 'matrix-char';\n      char.textContent = Math.random() > 0.5 ? '1' : '0';\n      char.style.left = Math.random() * 100 + '%';\n      char.style.animationDuration = (Math.random() * 2 + 1) + 's';\n      char.style.fontSize = (Math.random() * 10 + 14) + 'px';\n      container.appendChild(char);\n      \n      setTimeout(() => {\n        if (char.parentNode) {\n          char.remove();\n        }\n      }, 2000);\n    };\n\n    // Reduce frequency for better mobile performance\n    const interval = setInterval(createMatrixChar, 250);\n\n    return () => {\n      clearInterval(interval);\n      // Clean up any remaining characters\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n    };\n  }, []);\n\n  return <div ref={containerRef} className=\"absolute inset-0 pointer-events-none\" data-testid=\"matrix-rain\" />;\n}\n","size_bytes":1186},"client/src/components/ModernLoadingScreen.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface ModernLoadingScreenProps {\n  onComplete: () => void;\n}\n\nexport default function ModernLoadingScreen({ onComplete }: ModernLoadingScreenProps) {\n  const [progress, setProgress] = useState(0);\n  const [messageIndex, setMessageIndex] = useState(0);\n\n  const loadingMessages = [\n    'Initializing CookPhish...',\n    'Loading security modules...',\n    'Setting up phishing framework...',\n    'Configuring 2FA bypass...',\n    'Preparing IP logging system...',\n    'Framework ready!'\n  ];\n\n  useEffect(() => {\n    // Faster loading for better mobile experience\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        const newProgress = prev + Math.random() * 25 + 15; // Faster progress\n        \n        if (newProgress >= 100) {\n          clearInterval(interval);\n          setTimeout(() => {\n            onComplete();\n          }, 300); // Reduced delay\n          return 100;\n        }\n        \n        // Update message based on progress\n        const newMessageIndex = Math.floor((newProgress / 100) * (loadingMessages.length - 1));\n        if (newMessageIndex !== messageIndex && newMessageIndex < loadingMessages.length) {\n          setMessageIndex(newMessageIndex);\n        }\n        \n        return newProgress;\n      });\n    }, 100); // Faster updates\n\n    return () => clearInterval(interval);\n  }, [onComplete, messageIndex, loadingMessages.length]);\n\n  return (\n    <div className=\"loading-overlay\" data-testid=\"loading-screen\">\n      <div className=\"text-center z-10 relative text-white\">\n        <motion.div \n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"mb-12\"\n        >\n          <div className=\"text-7xl font-bold mb-6 text-white drop-shadow-2xl\" data-testid=\"loading-title\">\n            CookPhish\n          </div>\n          <div className=\"text-2xl font-light text-white/90 mb-8\" data-testid=\"loading-subtitle\">\n            Advanced Phishing Simulation Framework\n          </div>\n        </motion.div>\n        \n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5, duration: 0.6 }}\n          className=\"w-80 mx-auto\"\n        >\n          <div className=\"relative\">\n            <div className=\"w-full h-3 bg-white/20 rounded-full overflow-hidden backdrop-blur-sm border border-white/30\">\n              <motion.div \n                className=\"h-full bg-gradient-to-r from-white to-purple-200 transition-all duration-300\"\n                style={{ width: `${progress}%` }}\n                data-testid=\"progress-bar\"\n              />\n            </div>\n            <div className=\"text-right mt-2\">\n              <span className=\"text-white/80 font-mono text-sm\">{Math.round(progress)}%</span>\n            </div>\n          </div>\n        </motion.div>\n        \n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.8, duration: 0.4 }}\n          className=\"mt-8 text-white/90 font-medium\"\n          data-testid=\"loading-message\"\n        >\n          {loadingMessages[messageIndex]}\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.2, duration: 0.6 }}\n          className=\"mt-12 text-white/70 text-sm\"\n        >\n          Created by <span className=\"font-semibold text-white\">Technical White Hat</span> from India\n        </motion.div>\n\n        {/* Floating particles effect */}\n        <div className=\"absolute inset-0 pointer-events-none\">\n          {[...Array(20)].map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute w-2 h-2 bg-white/30 rounded-full\"\n              style={{\n                left: Math.random() * 100 + '%',\n                top: Math.random() * 100 + '%',\n              }}\n              animate={{\n                y: [-10, -50, -10],\n                opacity: [0.3, 0.8, 0.3],\n                scale: [0.5, 1.2, 0.5],\n              }}\n              transition={{\n                duration: 3,\n                repeat: Infinity,\n                delay: i * 0.2,\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4407},"client/src/components/ParticleSystem.tsx":{"content":"import { useEffect, useRef } from 'react';\n\nexport default function ParticleSystem() {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const createParticle = () => {\n      const particle = document.createElement('div');\n      particle.className = 'particle';\n      \n      const size = Math.random() * 4 + 1;\n      particle.style.width = size + 'px';\n      particle.style.height = size + 'px';\n      particle.style.left = Math.random() * window.innerWidth + 'px';\n      particle.style.top = Math.random() * window.innerHeight + 'px';\n      particle.style.opacity = (Math.random() * 0.5 + 0.2).toString();\n      \n      container.appendChild(particle);\n      \n      // Animate particle\n      const duration = Math.random() * 10000 + 5000;\n      const animation = particle.animate([\n        { \n          transform: 'translate(0, 0)', \n          opacity: particle.style.opacity \n        },\n        { \n          transform: `translate(${(Math.random() - 0.5) * 200}px, ${(Math.random() - 0.5) * 200}px)`, \n          opacity: '0' \n        }\n      ], {\n        duration: duration,\n        easing: 'ease-out',\n        fill: 'forwards'\n      });\n\n      animation.addEventListener('finish', () => {\n        if (particle.parentNode) {\n          particle.remove();\n        }\n      });\n    };\n    \n    // Reduce particles for better mobile performance\n    const isMobile = window.innerWidth < 768;\n    const particleCount = isMobile ? 8 : 20;\n    const intervalDelay = isMobile ? 2000 : 1000;\n    \n    // Create initial particles\n    for (let i = 0; i < particleCount; i++) {\n      setTimeout(createParticle, Math.random() * 2000);\n    }\n    \n    // Create particles periodically\n    const interval = setInterval(createParticle, intervalDelay);\n    \n    return () => {\n      clearInterval(interval);\n      // Clean up particles\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n    };\n  }, []);\n\n  return (\n    <div \n      ref={containerRef} \n      className=\"fixed inset-0 pointer-events-none z-0\" \n      data-testid=\"particle-system\"\n    />\n  );\n}\n","size_bytes":2186},"client/src/components/TerminalWindow.tsx":{"content":"import { ReactNode } from 'react';\n\ninterface TerminalWindowProps {\n  title: string;\n  children: ReactNode;\n  icon?: string;\n  iconColor?: string;\n  className?: string;\n  onMouseEnter?: () => void;\n  'data-testid'?: string;\n}\n\nexport default function TerminalWindow({ \n  title, \n  children, \n  icon, \n  iconColor = 'text-matrix',\n  className = '',\n  onMouseEnter,\n  'data-testid': testId\n}: TerminalWindowProps) {\n  return (\n    <div \n      className={`terminal-window p-6 ${className}`}\n      onMouseEnter={onMouseEnter}\n      data-testid={testId}\n    >\n      <div className=\"bg-gray-900 rounded-t-lg p-3 mb-6 flex items-center justify-between\">\n        <div className=\"flex space-x-2\">\n          <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n          <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n          <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {icon && <i className={`${icon} ${iconColor}`}></i>}\n          <span className=\"font-mono text-sm\">{title}</span>\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n}\n","size_bytes":1147},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useSoundEffects.tsx":{"content":"import { useCallback, useRef } from 'react';\nimport { AudioManager } from '@/utils/audioManager';\n\nexport function useSoundEffects() {\n  const audioManagerRef = useRef<AudioManager | null>(null);\n\n  // Initialize audio manager on first use\n  const getAudioManager = useCallback(() => {\n    if (!audioManagerRef.current) {\n      audioManagerRef.current = new AudioManager();\n    }\n    return audioManagerRef.current;\n  }, []);\n\n  const playClick = useCallback(() => {\n    try {\n      getAudioManager().playClickSound();\n    } catch (error) {\n      console.warn('Failed to play click sound:', error);\n    }\n  }, [getAudioManager]);\n\n  const playHover = useCallback(() => {\n    try {\n      getAudioManager().playHoverSound();\n    } catch (error) {\n      console.warn('Failed to play hover sound:', error);\n    }\n  }, [getAudioManager]);\n\n  const playNotification = useCallback(() => {\n    try {\n      getAudioManager().playNotificationSound();\n    } catch (error) {\n      console.warn('Failed to play notification sound:', error);\n    }\n  }, [getAudioManager]);\n\n  return {\n    playClick,\n    playHover,\n    playNotification\n  };\n}\n","size_bytes":1129},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Home.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Link } from \"wouter\";\nimport ModernLoadingScreen from \"@/components/ModernLoadingScreen\";\nimport GitHubStarNotification from \"@/components/GitHubStarNotification\";\nimport LikeButton from \"@/components/LikeButton\";\nimport exampleImage from \"@assets/Untitled _1754988628893.png\";\nimport twhLogo from \"@assets/technical white hat 2.0_1754987246786.jpg\";\n\nexport default function Home() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeSection, setActiveSection] = useState(\"home\");\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  // Optimized scroll handling with throttling for better mobile performance\n  useEffect(() => {\n    let ticking = false;\n    const handleScroll = () => {\n      if (!ticking) {\n        requestAnimationFrame(() => {\n          const sections = [\"home\", \"features\", \"installation\", \"usage\", \"author\"];\n          const scrollPosition = window.scrollY + 100;\n\n          for (const section of sections) {\n            const element = document.getElementById(section);\n            if (\n              element &&\n              scrollPosition >= element.offsetTop &&\n              scrollPosition < element.offsetTop + element.offsetHeight\n            ) {\n              setActiveSection(section);\n              break;\n            }\n          }\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll, { passive: true });\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      // Use instant scroll on mobile for better performance\n      const isMobile = window.innerWidth < 768;\n      element.scrollIntoView({ \n        behavior: isMobile ? \"auto\" : \"smooth\", \n        block: \"start\" \n      });\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      // Simple toast notification\n      const toast = document.createElement(\"div\");\n      toast.className =\n        \"fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg z-50\";\n      toast.textContent = \"Copied to clipboard!\";\n      document.body.appendChild(toast);\n      setTimeout(() => toast.remove(), 2000);\n    } catch (err) {\n      console.error(\"Failed to copy text: \", err);\n    }\n  };\n\n  if (isLoading) {\n    return <ModernLoadingScreen onComplete={() => setIsLoading(false)} />;\n  }\n\n  return (\n    <div className=\"min-h-screen text-white relative\">\n      {/* Purple Gradient Background */}\n      <div className=\"fixed inset-0 bg-gradient-to-br from-[#652ca8] via-[#4c1d95] to-[#1e1b4b] -z-10\"></div>\n      \n      {/* GitHub Star Notification */}\n      <GitHubStarNotification />\n      \n      {/* Like Button */}\n      <LikeButton />\n\n      {/* Navigation */}\n      <nav className=\"fixed top-0 w-full z-50 backdrop-blur-md border-b border-white/20\">\n        <div className=\"container mx-auto px-4 sm:px-6 py-3 sm:py-4\">\n          <div className=\"flex justify-between items-center\">\n            {/* Logo Section - Mobile Responsive */}\n            <div className=\"flex items-center space-x-2 sm:space-x-4\">\n              <div className=\"group cursor-pointer\">\n                <div className=\"text-xl sm:text-2xl md:text-3xl font-black bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 bg-clip-text text-transparent drop-shadow-2xl tracking-wide transform transition-all duration-300 group-hover:scale-105\">\n                  CookPhish\n                </div>\n              </div>\n              <Badge\n                variant=\"secondary\"\n                className=\"text-white border-white/30 bg-transparent text-xs sm:text-sm\"\n              >\n                v3.0.0\n              </Badge>\n            </div>\n\n            {/* Desktop Navigation */}\n            <div className=\"hidden lg:flex space-x-2\">\n              {[\n                { id: \"features\", label: \"Features\", icon: \"fas fa-star\" },\n                { id: \"videos\", label: \"Videos\", icon: \"fas fa-play\" },\n                {\n                  id: \"installation\",\n                  label: \"Installation\", \n                  icon: \"fas fa-download\",\n                },\n                { id: \"usage\", label: \"Usage\", icon: \"fas fa-rocket\" },\n                { id: \"author\", label: \"Author\", icon: \"fas fa-user\" },\n              ].map(({ id, label, icon }) => (\n                <button\n                  key={id}\n                  onClick={() => scrollToSection(id)}\n                  className={`nav-link-button group relative px-3 py-2 rounded-xl font-medium transition-all duration-300 transform hover:scale-105 ${\n                    activeSection === id\n                      ? \"text-white bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-400/30 shadow-lg shadow-cyan-500/20\"\n                      : \"text-white/80 hover:text-white hover:bg-white/10 border border-transparent hover:border-white/20 hover:shadow-md\"\n                  }`}\n                  data-testid={`nav-${id}`}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <i className={`${icon} text-sm`}></i>\n                    <span className=\"text-sm\">{label}</span>\n                  </div>\n                  {activeSection === id && (\n                    <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1 w-2 h-2 bg-gradient-to-r from-cyan-400 to-purple-500 rounded-full\"></div>\n                  )}\n                </button>\n              ))}\n\n              {/* Pro Link Button */}\n              <Link href=\"/pro\">\n                <button\n                  className=\"nav-link-button group relative px-3 py-2 rounded-xl font-medium transition-all duration-300 transform hover:scale-105 text-white/80 hover:text-white hover:bg-gradient-to-r hover:from-purple-500/20 hover:to-pink-500/20 border border-transparent hover:border-purple-400/30 hover:shadow-lg hover:shadow-purple-500/20\"\n                  data-testid=\"nav-pro\"\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <i className=\"fas fa-crown text-sm text-purple-400\"></i>\n                    <span className=\"text-sm\">Pro</span>\n                  </div>\n                </button>\n              </Link>\n            </div>\n\n            {/* Action Buttons + Mobile Menu - Mobile Responsive */}\n            <div className=\"flex items-center space-x-1.5 sm:space-x-3\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"group relative overflow-hidden bg-transparent border-2 border-white/30 text-white font-semibold px-2 sm:px-4 py-2 rounded-xl transition-all duration-300 hover:border-cyan-400/50 hover:shadow-lg hover:shadow-cyan-500/20 hover:scale-105\"\n                asChild\n              >\n                <a\n                  href=\"https://github.com/technicalwhitehat-yt/CookPhish\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  data-testid=\"github-btn\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <div className=\"relative flex items-center space-x-1 sm:space-x-2\">\n                    <i className=\"fab fa-github text-base sm:text-lg\"></i>\n                    <span className=\"hidden sm:block\">GitHub</span>\n                  </div>\n                </a>\n              </Button>\n              <Button\n                size=\"sm\"\n                className=\"group relative overflow-hidden bg-gradient-to-r from-red-500 to-red-600 border border-red-400 text-white font-semibold px-2 sm:px-4 py-2 rounded-xl transition-all duration-300 hover:from-red-400 hover:to-red-500 hover:shadow-xl hover:shadow-red-500/50 hover:scale-105 shadow-lg shadow-red-500/30\"\n                asChild\n              >\n                <a\n                  href=\"https://youtube.com/@technicalwhitehat\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  data-testid=\"youtube-btn\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-red-300/20 to-red-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <div className=\"absolute -inset-1 bg-gradient-to-r from-red-500/40 to-red-600/40 rounded-xl blur opacity-60 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <div className=\"relative flex items-center space-x-1 sm:space-x-2\">\n                    <i className=\"fab fa-youtube text-base sm:text-lg drop-shadow-sm\"></i>\n                    <span className=\"hidden sm:block\">YouTube</span>\n                  </div>\n                </a>\n              </Button>\n              \n              {/* Mobile Menu Button */}\n              <button\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                className=\"lg:hidden p-2 rounded-xl bg-white/10 border border-white/20 text-white hover:bg-white/20 transition-all duration-300\"\n                data-testid=\"mobile-menu-btn\"\n              >\n                <i className={`fas ${isMobileMenuOpen ? 'fa-times' : 'fa-bars'} text-lg`}></i>\n              </button>\n            </div>\n          </div>\n          \n          {/* Mobile Menu */}\n          {isMobileMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              className=\"lg:hidden mt-4 p-4 bg-black/20 backdrop-blur-lg rounded-2xl border border-white/20\"\n            >\n              <div className=\"grid grid-cols-2 gap-3\">\n                {[\n                  { id: \"features\", label: \"Features\", icon: \"fas fa-star\" },\n                  { id: \"videos\", label: \"Videos\", icon: \"fas fa-play\" },\n                  {\n                    id: \"installation\",\n                    label: \"Installation\", \n                    icon: \"fas fa-download\",\n                  },\n                  { id: \"usage\", label: \"Usage\", icon: \"fas fa-rocket\" },\n                  { id: \"author\", label: \"Author\", icon: \"fas fa-user\" },\n                  { id: \"pro\", label: \"Pro\", icon: \"fas fa-crown\" },\n                ].map(({ id, label, icon }) => (\n                  <button\n                    key={id}\n                    onClick={() => {\n                      if (id === \"pro\") {\n                        window.location.href = \"/pro\";\n                      } else {\n                        scrollToSection(id);\n                        setIsMobileMenuOpen(false);\n                      }\n                    }}\n                    className={`flex items-center space-x-2 p-3 rounded-xl font-medium transition-all duration-300 ${\n                      activeSection === id\n                        ? \"text-white bg-gradient-to-r from-cyan-500/20 to-purple-500/20 border border-cyan-400/30\"\n                        : \"text-white/80 hover:text-white hover:bg-white/10 border border-transparent hover:border-white/20\"\n                    }`}\n                    data-testid={`mobile-nav-${id}`}\n                  >\n                    <i className={`${icon} text-sm ${id === \"pro\" ? \"text-purple-400\" : \"\"}`}></i>\n                    <span className=\"text-sm\">{label}</span>\n                  </button>\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <section id=\"home\" className=\"pt-20 sm:pt-24 pb-12 sm:pb-20\">\n        <div className=\"container mx-auto px-4 sm:px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-8 lg:gap-12 items-center\">\n            {/* Left Content */}\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              className=\"space-y-6 sm:space-y-8 text-center lg:text-left\"\n            >\n              <div className=\"space-y-4\">\n                <Badge className=\"bg-white/20 text-white border-white/30 mb-4 text-sm\">\n                  🔒 Cybersecurity Tool\n                </Badge>\n                <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold leading-tight\">\n                  <span className=\"text-white drop-shadow-2xl\">CookPhish</span>\n                  <br />\n                  <span className=\"text-white/90\">Advanced Framework</span>\n                </h1>\n                <p className=\"text-base sm:text-lg lg:text-xl text-white/80 leading-relaxed max-w-2xl mx-auto lg:mx-0\">\n                  Professional phishing simulation tool for cybersecurity\n                  education and ethical hacking training. Created by Technical\n                  White Hat from India.\n                </p>\n              </div>\n\n              <div className=\"flex flex-wrap gap-3\">\n                <Badge\n                  variant=\"outline\"\n                  className=\"text-sm border-white/30 text-white\"\n                >\n                  Instagram Clone\n                </Badge>\n                <Badge\n                  variant=\"outline\"\n                  className=\"text-sm border-white/30 text-white\"\n                >\n                  2FA Bypass\n                </Badge>\n                <Badge\n                  variant=\"outline\"\n                  className=\"text-sm border-white/30 text-white\"\n                >\n                  IP Logging\n                </Badge>\n                <Badge\n                  variant=\"outline\"\n                  className=\"text-sm border-white/30 text-white\"\n                >\n                  Multi-Platform\n                </Badge>\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Button\n                  size=\"lg\"\n                  className=\"modern-button hero-button-primary px-8 py-4 text-lg font-bold\"\n                  onClick={() => scrollToSection(\"installation\")}\n                  data-testid=\"get-started-btn\"\n                >\n                  <i className=\"fas fa-download mr-3\"></i>\n                  Get Started\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"lg\"\n                  className=\"modern-button hero-button-secondary px-8 py-4 text-lg font-semibold\"\n                  onClick={() => scrollToSection(\"features\")}\n                  data-testid=\"learn-more-btn\"\n                >\n                  <i className=\"fas fa-info-circle mr-3\"></i>\n                  Learn More\n                </Button>\n              </div>\n\n              <div className=\"flex items-center space-x-6 pt-4\">\n                <div className=\"flex items-center space-x-2 text-sm text-white/80\">\n                  <i className=\"fas fa-shield-alt text-green-400\"></i>\n                  <span>Ethical Use Only</span>\n                </div>\n                <div className=\"flex items-center space-x-2 text-sm text-white/80\">\n                  <i className=\"fas fa-code-branch text-blue-400\"></i>\n                  <span>Open Source</span>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Right Content - Hero Image */}\n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              className=\"relative\"\n            >\n              <div className=\"relative image-purple-glow\">\n                <img\n                  src={exampleImage}\n                  alt=\"CookPhish Interface\"\n                  className=\"rounded-2xl shadow-2xl w-full\"\n                />\n                <div className=\"absolute inset-0 purple-gradient opacity-10 rounded-2xl\"></div>\n              </div>\n\n              {/* Floating Cards */}\n              <motion.div\n                className=\"absolute -top-6 -left-6 bg-white/10 backdrop-blur-md border border-white/20 rounded-xl p-4\"\n                animate={{ y: [0, -10, 0] }}\n                transition={{ duration: 3, repeat: Infinity }}\n              >\n                <div className=\"flex items-center space-x-2 text-sm\">\n                  <div className=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\n                  <span className=\"text-white font-medium\">\n                    Framework Active\n                  </span>\n                </div>\n              </motion.div>\n\n              <motion.div\n                className=\"absolute -bottom-6 -right-6 bg-white/10 backdrop-blur-md border border-white/20 rounded-xl p-4\"\n                animate={{ y: [0, 10, 0] }}\n                transition={{ duration: 3, repeat: Infinity, delay: 1.5 }}\n              >\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-white\">2FA+</div>\n                  <div className=\"text-xs text-white/80\">Bypass Modes</div>\n                </div>\n              </motion.div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section id=\"features\" className=\"py-20 bg-black/10 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4\">\n              ✨ Key Features\n            </Badge>\n            <h2 className=\"text-4xl font-bold mb-4\">\n              Professional{\" \"}\n              <span className=\"text-white drop-shadow-2xl\">\n                Security Testing\n              </span>\n            </h2>\n            <p className=\"text-xl text-white/80 max-w-2xl mx-auto\">\n              Comprehensive phishing simulation framework with advanced features\n              for cybersecurity professionals\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: \"fab fa-instagram\",\n                title: \"Instagram Clone\",\n                description:\n                  \"Pixel-perfect Instagram login page simulation with realistic design and functionality\",\n                color: \"text-pink-500\",\n                bgColor: \"bg-pink-50\",\n              },\n              {\n                icon: \"fas fa-mobile-alt\",\n                title: \"2FA Bypass\",\n                description:\n                  \"Advanced two-factor authentication bypass including TOTP, SMS, and WhatsApp methods\",\n                color: \"text-green-500\",\n                bgColor: \"bg-green-50\",\n              },\n              {\n                icon: \"fas fa-network-wired\",\n                title: \"IP Logging\",\n                description:\n                  \"Comprehensive victim data collection with IP addresses, user agents, and timestamps\",\n                color: \"text-blue-500\",\n                bgColor: \"bg-blue-50\",\n              },\n              {\n                icon: \"fas fa-cloud\",\n                title: \"Tunneling Support\",\n                description:\n                  \"Built-in Cloudflared and Tunnelmole integration for secure remote access\",\n                color: \"text-purple-500\",\n                bgColor: \"bg-purple-50\",\n              },\n              {\n                icon: \"fas fa-sync-alt\",\n                title: \"Auto-Update\",\n                description:\n                  \"GitHub-based automatic update system to keep framework current and secure\",\n                color: \"text-indigo-500\",\n                bgColor: \"bg-indigo-50\",\n              },\n              {\n                icon: \"fas fa-terminal\",\n                title: \"Multi-Platform\",\n                description:\n                  \"Compatible with Termux, Kali Linux, and all Debian-based systems\",\n                color: \"text-orange-500\",\n                bgColor: \"bg-orange-50\",\n              },\n            ].map((feature, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Card\n                  className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl h-full shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300 hover:bg-white/15 hover:border-purple-300/60 glow-card\"\n                  data-testid={`feature-card-${index}`}\n                >\n                  <CardContent className=\"p-8\">\n                    <div\n                      className={`w-14 h-14 bg-gradient-to-br from-white/30 to-white/10 rounded-2xl flex items-center justify-center mb-6 shadow-lg`}\n                    >\n                      <i\n                        className={`${feature.icon} text-xl ${feature.color}`}\n                      ></i>\n                    </div>\n                    <h3 className=\"text-xl font-bold mb-3 text-white\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-white/80 leading-relaxed\">\n                      {feature.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Watch Video Section */}\n      <section\n        id=\"videos\"\n        className=\"py-20 bg-gradient-to-r from-purple-900/20 to-blue-900/20 backdrop-blur-sm\"\n      >\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-yellow-400/20 text-yellow-300 border-yellow-400/30 mb-4\">\n              🎥 Watch Tutorials\n            </Badge>\n            <h2 className=\"text-4xl font-bold mb-4\">\n              Step-by-Step{\" \"}\n              <span className=\"text-white drop-shadow-2xl\">Video Guides</span>\n            </h2>\n            <p className=\"text-xl text-white/80\">\n              Follow along with detailed tutorials for both Android and Linux\n              platforms\n            </p>\n          </motion.div>\n\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {/* Android Tutorial */}\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-md border border-green-300/40 rounded-2xl shadow-xl shadow-green-500/20 hover:shadow-2xl hover:shadow-green-400/30 transition-all duration-300 hover:border-green-300/60\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-green-500/30 to-green-600/20 rounded-2xl flex items-center justify-center mr-4 shadow-lg shadow-green-500/30\">\n                      <i className=\"fab fa-android text-2xl text-green-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-white\">\n                        Android Tutorial\n                      </h3>\n                      <p className=\"text-sm text-white/60\">\n                        Complete guide for Termux installation\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-6\">\n                    <div className=\"aspect-video bg-black/30 rounded-xl border-2 border-green-400/30 relative overflow-hidden group cursor-pointer\">\n                      <a\n                        href=\"https://twhtube.blogspot.com/2025/08/cookphish-termux.html\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"android-video\"\n                        className=\"block w-full h-full\"\n                      >\n                        <img\n                          src=\"https://raw.githubusercontent.com/hiddeneyes99/hiddeneyes99/refs/heads/main/HACK1.png\"\n                          alt=\"Android Tutorial Thumbnail\"\n                          className=\"w-full h-full object-cover\"\n                        />\n                        <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                          <Button className=\"modern-button youtube-button bg-red-600/90 hover:bg-red-500 text-white px-6 py-3 text-lg font-semibold\">\n                            <i className=\"fab fa-youtube mr-2 text-xl\"></i>\n                            Watch\n                          </Button>\n                        </div>\n                      </a>\n                    </div>\n\n                    <div className=\"bg-green-500/10 rounded-xl p-4 border border-green-400/30\">\n                      <h4 className=\"font-bold text-green-300 mb-2\">\n                        📱 What You'll Learn:\n                      </h4>\n                      <ul className=\"text-sm text-white/80 space-y-1\">\n                        <li>• Setting up Termux on Android</li>\n                        <li>• Installing CookPhish framework</li>\n                        <li>• Running phishing simulations</li>\n                        <li>• Mobile-specific configurations</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Linux Tutorial */}\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-md border border-blue-300/40 rounded-2xl shadow-xl shadow-blue-500/20 hover:shadow-2xl hover:shadow-blue-400/30 transition-all duration-300 hover:border-blue-300/60\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500/30 to-blue-600/20 rounded-2xl flex items-center justify-center mr-4 shadow-lg shadow-blue-500/30\">\n                      <i className=\"fab fa-linux text-2xl text-blue-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-white\">\n                        Kali Linux Tutorial\n                      </h3>\n                      <p className=\"text-sm text-white/60\">\n                        Professional setup for security testing\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-6\">\n                    <div className=\"aspect-video bg-black/30 rounded-xl border-2 border-blue-400/30 relative overflow-hidden group cursor-pointer\">\n                      <a\n                        href=\"https://twhtube.blogspot.com/2025/08/cookphish-partical-video-for-kali-linux.html\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"linux-video\"\n                        className=\"block w-full h-full\"\n                      >\n                        <img\n                          src=\"https://raw.githubusercontent.com/hiddeneyes99/hiddeneyes99/refs/heads/main/HACK3.png\"\n                          alt=\"Linux Tutorial Thumbnail\"\n                          className=\"w-full h-full object-cover\"\n                        />\n                        <div className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                          <Button className=\"modern-button youtube-button bg-red-600/90 hover:bg-red-500 text-white px-6 py-3 text-lg font-semibold\">\n                            <i className=\"fab fa-youtube mr-2 text-xl\"></i>\n                            Watch\n                          </Button>\n                        </div>\n                      </a>\n                    </div>\n\n                    <div className=\"bg-blue-500/10 rounded-xl p-4 border border-blue-400/30\">\n                      <h4 className=\"font-bold text-blue-300 mb-2\">\n                        💻 What You'll Learn:\n                      </h4>\n                      <ul className=\"text-sm text-white/80 space-y-1\">\n                        <li>• Kali Linux environment setup</li>\n                        <li>• Advanced CookPhish features</li>\n                        <li>• Professional penetration testing</li>\n                        <li>• Security assessment techniques</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n\n          {/* Video Features */}\n          <motion.div\n            className=\"mt-12 max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500/30 to-purple-600/20 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                    <i className=\"fas fa-play-circle text-xl text-purple-400\"></i>\n                  </div>\n                  <h3 className=\"font-bold text-white mb-2\">HD Quality</h3>\n                  <p className=\"text-sm text-white/80\">\n                    Crystal clear 1080p tutorials with detailed explanations\n                  </p>\n                </CardContent>\n              </Card>\n              <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500/30 to-purple-600/20 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                    <i className=\"fas fa-clock text-xl text-purple-400\"></i>\n                  </div>\n                  <h3 className=\"font-bold text-white mb-2\">Step-by-Step</h3>\n                  <p className=\"text-sm text-white/80\">\n                    Easy to follow instructions for beginners\n                  </p>\n                </CardContent>\n              </Card>\n              <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500/30 to-purple-600/20 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                    <i className=\"fas fa-comments text-xl text-purple-400\"></i>\n                  </div>\n                  <h3 className=\"font-bold text-white mb-2\">\n                    Community Support\n                  </h3>\n                  <p className=\"text-sm text-white/80\">\n                    Get help from our active community\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Installation Section */}\n      <section id=\"installation\" className=\"py-20 bg-white/5 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-green-400/20 text-green-300 border-green-400/30 mb-4\">\n              📦 Complete Setup\n            </Badge>\n            <h2 className=\"text-4xl font-bold mb-4\">\n              Detailed{\" \"}\n              <span className=\"text-white drop-shadow-2xl\">Installation Guide</span>\n            </h2>\n            <p className=\"text-xl text-white/80 mb-6\">\n              Complete step-by-step instructions for Android and Kali Linux platforms\n            </p>\n\n            {/* Download Button */}\n            <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-8\">\n              <Button\n                size=\"lg\"\n                className=\"hero-button-primary px-8 py-4 text-lg font-semibold\"\n                asChild\n              >\n                <a\n                  href=\"https://github.com/technicalwhitehat-yt/CookPhish/releases/tag/v3.0.0\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  data-testid=\"direct-download\"\n                >\n                  <i className=\"fas fa-download mr-3 text-xl\"></i>\n                  Direct Download v3.0.0\n                </a>\n              </Button>\n\n              <div className=\"flex gap-3\">\n                <Button\n                  variant=\"outline\"\n                  size=\"lg\"\n                  className=\"social-button github-button px-6 py-3\"\n                  asChild\n                >\n                  <a\n                    href=\"https://github.com/technicalwhitehat-yt/CookPhish\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    data-testid=\"github-star\"\n                  >\n                    <i className=\"fas fa-star mr-2\"></i>\n                    Star\n                  </a>\n                </Button>\n\n                <Button\n                  variant=\"outline\"\n                  size=\"lg\"\n                  className=\"social-button github-button px-6 py-3\"\n                  asChild\n                >\n                  <a\n                    href=\"https://github.com/technicalwhitehat-yt\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    data-testid=\"github-follow\"\n                  >\n                    <i className=\"fas fa-user-plus mr-2\"></i>\n                    Follow\n                  </a>\n                </Button>\n              </div>\n            </div>\n          </motion.div>\n\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {/* Termux Installation */}\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-md border border-green-300/40 rounded-2xl shadow-xl shadow-green-500/20 hover:shadow-2xl hover:shadow-green-400/30 transition-all duration-300 hover:border-green-300/60\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-green-500/30 to-green-600/20 rounded-2xl flex items-center justify-center mr-4 shadow-lg shadow-green-500/30\">\n                      <i className=\"fab fa-android text-2xl text-green-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-white\">\n                        Termux (Android)\n                      </h3>\n                      <p className=\"text-sm text-white/60\">\n                        Complete setup guide for Android devices\n                      </p>\n                    </div>\n                  </div>\n\n                  {/* Termux Download Section */}\n                  <div className=\"mb-6 p-4 bg-gradient-to-r from-green-500/10 to-green-600/10 rounded-xl border border-green-400/30\">\n                    <h4 className=\"font-bold text-green-300 mb-3\">\n                      📱 Step 1: Download Termux App\n                    </h4>\n                    <div className=\"mb-4 text-sm text-white/80 bg-black/20 rounded-lg p-3\">\n                      <p><strong className=\"text-green-300\">What is Termux?</strong> Termux is a powerful Android terminal emulator that provides a Linux environment. It allows you to run Linux commands, install packages, and use development tools directly on your Android device without requiring root access.</p>\n                    </div>\n                    <div className=\"grid grid-cols-1 gap-3\">\n                      <Button\n                        size=\"sm\"\n                        className=\"bg-green-500 hover:bg-green-600 text-white\"\n                        asChild\n                      >\n                        <a\n                          href=\"https://github.com/termux/termux-app/releases/download/v0.118.3/termux-app_v0.118.3+github-debug_universal.apk\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          data-testid=\"download-termux-direct\"\n                        >\n                          <i className=\"fab fa-android mr-2\"></i>\n                          Download Termux v0.118.3 (Recommended)\n                        </a>\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        className=\"border-green-400/50 text-green-300 hover:bg-green-500/20\"\n                        asChild\n                      >\n                        <a\n                          href=\"https://github.com/termux/termux-app/releases\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          data-testid=\"download-termux-github\"\n                        >\n                          <i className=\"fab fa-github mr-2\"></i>\n                          Other Versions (GitHub)\n                        </a>\n                      </Button>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    {/* Step-by-step commands */}\n                    <div className=\"space-y-3\">\n                      <div className=\"bg-black/30 rounded-lg p-4 border border-green-400/30\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-green-300 font-semibold text-sm\">\n                            Step 2: Update packages\n                          </span>\n                          <button\n                            className=\"copy-button\"\n                            onClick={(e) => {\n                              navigator.clipboard.writeText(\n                                \"pkg update && pkg upgrade -y\",\n                              );\n                              const btn = e.target as HTMLButtonElement;\n                              const original = btn.innerHTML;\n                              btn.innerHTML = \"✓ Copied!\";\n                              setTimeout(\n                                () => (btn.innerHTML = original),\n                                2000,\n                              );\n                            }}\n                            data-testid=\"copy-termux-update\"\n                          >\n                            <i className=\"fas fa-copy mr-1\"></i>Copy\n                          </button>\n                        </div>\n                        <code className=\"text-green-300 font-mono text-sm block\">\n                          pkg update && pkg upgrade -y\n                        </code>\n                        <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                          <strong>Description:</strong> This command updates Termux package repositories and upgrades all installed packages to their latest versions. Essential for ensuring compatibility and security.\n                        </div>\n                      </div>\n\n                      <div className=\"bg-black/30 rounded-lg p-4 border border-green-400/30\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-green-300 font-semibold text-sm\">\n                            Step 3: Install Git\n                          </span>\n                          <button\n                            className=\"copy-button\"\n                            onClick={(e) => {\n                              navigator.clipboard.writeText(\n                                \"pkg install git -y\",\n                              );\n                              const btn = e.target as HTMLButtonElement;\n                              const original = btn.innerHTML;\n                              btn.innerHTML = \"✓ Copied!\";\n                              setTimeout(\n                                () => (btn.innerHTML = original),\n                                2000,\n                              );\n                            }}\n                            data-testid=\"copy-termux-git\"\n                          >\n                            <i className=\"fas fa-copy mr-1\"></i>Copy\n                          </button>\n                        </div>\n                        <code className=\"text-green-300 font-mono text-sm block\">\n                          pkg install git -y\n                        </code>\n                        <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                          <strong>Why Git?</strong> Git is required to clone the CookPhish repository from GitHub. It's a version control system that allows us to download and manage the tool's source code.\n                        </div>\n                      </div>\n\n                      <div className=\"bg-black/30 rounded-lg p-4 border border-green-400/30\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-green-300 font-semibold text-sm\">\n                            Step 4: Clone & Run\n                          </span>\n                          <button\n                            className=\"copy-button\"\n                            onClick={(e) => {\n                              navigator.clipboard.writeText(\n                                \"git clone https://github.com/technicalwhitehat-yt/CookPhish.git && cd CookPhish && bash CookPhish\",\n                              );\n                              const btn = e.target as HTMLButtonElement;\n                              const original = btn.innerHTML;\n                              btn.innerHTML = \"✓ Copied!\";\n                              setTimeout(\n                                () => (btn.innerHTML = original),\n                                2000,\n                              );\n                            }}\n                            data-testid=\"copy-termux-clone\"\n                          >\n                            <i className=\"fas fa-copy mr-1\"></i>Copy\n                          </button>\n                        </div>\n                        <code className=\"text-green-300 font-mono text-sm block break-all\">\n                          git clone\n                          https://github.com/technicalwhitehat-yt/CookPhish.git\n                          && cd CookPhish && bash CookPhish\n                        </code>\n                        <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                          <strong>What this does:</strong> Downloads CookPhish from GitHub, navigates to the folder, and starts the tool. This command combines three operations: download, navigate, and execute.\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* One-line command */}\n                    <div className=\"bg-green-500/10 rounded-xl p-4 border border-green-400/30 mt-6\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-bold text-green-300\">\n                          📱 Recommended: One-Line Installation Automation\n                        </h4>\n                        <button\n                          className=\"copy-button\"\n                          onClick={(e) => {\n                            navigator.clipboard.writeText(\n                              \"pkg update && pkg upgrade -y && pkg install git -y && git clone https://github.com/technicalwhitehat-yt/CookPhish.git && cd CookPhish && bash CookPhish\",\n                            );\n                            const btn = e.target as HTMLButtonElement;\n                            const original = btn.innerHTML;\n                            btn.innerHTML = \"✓ Copied!\";\n                            setTimeout(() => (btn.innerHTML = original), 2000);\n                          }}\n                          data-testid=\"copy-termux-all\"\n                        >\n                          <i className=\"fas fa-copy mr-1\"></i>Copy All\n                        </button>\n                      </div>\n                      <code className=\"text-green-300 font-mono text-xs block break-all\">\n                        pkg update && pkg upgrade -y && pkg install git -y &&\n                        git clone\n                        https://github.com/technicalwhitehat-yt/CookPhish.git &&\n                        cd CookPhish && bash CookPhish\n                      </code>\n                      <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                        <strong>Automated Setup:</strong> This single command performs all installation steps automatically. Perfect for quick setup - just copy, paste, and wait for completion.\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Kali Linux Installation */}\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-md border border-blue-300/40 rounded-2xl shadow-xl shadow-blue-500/20 hover:shadow-2xl hover:shadow-blue-400/30 transition-all duration-300 hover:border-blue-300/60\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500/30 to-blue-600/20 rounded-2xl flex items-center justify-center mr-4 shadow-lg shadow-blue-500/30\">\n                      <i className=\"fab fa-linux text-2xl text-blue-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-white\">\n                        Kali Linux / Debian\n                      </h3>\n                      <p className=\"text-sm text-white/60\">\n                        Professional setup for Linux-based systems\n                      </p>\n                    </div>\n                  </div>\n\n                  {/* Kali Linux Info Section */}\n                  <div className=\"mb-6 p-4 bg-gradient-to-r from-blue-500/10 to-blue-600/10 rounded-xl border border-blue-400/30\">\n                    <h4 className=\"font-bold text-blue-300 mb-3\">\n                      💻 Step 1: Open Kali Linux Terminal\n                    </h4>\n                    <div className=\"mb-4 text-sm text-white/80 bg-black/20 rounded-lg p-3\">\n                      <p><strong className=\"text-blue-300\">About Kali Linux:</strong> Kali Linux is a Debian-based penetration testing distribution designed for cybersecurity professionals. It comes pre-installed with numerous security testing tools and provides a robust environment for ethical hacking and security research.</p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    {/* Step-by-step commands */}\n                    <div className=\"space-y-3\">\n                      <div className=\"bg-black/30 rounded-lg p-4 border border-blue-400/30\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-blue-300 font-semibold text-sm\">\n                            Step 2: Update & Upgrade System\n                          </span>\n                          <button\n                            className=\"copy-button\"\n                            onClick={(e) => {\n                              navigator.clipboard.writeText(\n                                \"sudo apt update && sudo apt upgrade -y\",\n                              );\n                              const btn = e.target as HTMLButtonElement;\n                              const original = btn.innerHTML;\n                              btn.innerHTML = \"✓ Copied!\";\n                              setTimeout(\n                                () => (btn.innerHTML = original),\n                                2000,\n                              );\n                            }}\n                            data-testid=\"copy-kali-update\"\n                          >\n                            <i className=\"fas fa-copy mr-1\"></i>Copy\n                          </button>\n                        </div>\n                        <code className=\"text-blue-300 font-mono text-sm block\">\n                          sudo apt update && sudo apt upgrade -y\n                        </code>\n                        <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                          <strong>Important:</strong> This command updates package lists and upgrades the entire system. It may take 20-25 minutes to complete as it downloads and installs all system updates for security and compatibility.\n                        </div>\n                      </div>\n\n                      <div className=\"bg-black/30 rounded-lg p-4 border border-blue-400/30\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-blue-300 font-semibold text-sm\">\n                            Step 3: Install Git\n                          </span>\n                          <button\n                            className=\"copy-button\"\n                            onClick={(e) => {\n                              navigator.clipboard.writeText(\n                                \"sudo apt install git -y\",\n                              );\n                              const btn = e.target as HTMLButtonElement;\n                              const original = btn.innerHTML;\n                              btn.innerHTML = \"✓ Copied!\";\n                              setTimeout(\n                                () => (btn.innerHTML = original),\n                                2000,\n                              );\n                            }}\n                            data-testid=\"copy-kali-git\"\n                          >\n                            <i className=\"fas fa-copy mr-1\"></i>Copy\n                          </button>\n                        </div>\n                        <code className=\"text-blue-300 font-mono text-sm block\">\n                          sudo apt install git -y\n                        </code>\n                        <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                          <strong>Why Git?</strong> Git is essential for cloning repositories from GitHub. It's a distributed version control system that allows us to download and manage the CookPhish source code efficiently.\n                        </div>\n                      </div>\n\n                      <div className=\"bg-black/30 rounded-lg p-4 border border-blue-400/30\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-blue-300 font-semibold text-sm\">\n                            Step 4: Clone & Run\n                          </span>\n                          <button\n                            className=\"copy-button\"\n                            onClick={(e) => {\n                              navigator.clipboard.writeText(\n                                \"git clone https://github.com/technicalwhitehat-yt/CookPhish.git && cd CookPhish && sudo bash CookPhish\",\n                              );\n                              const btn = e.target as HTMLButtonElement;\n                              const original = btn.innerHTML;\n                              btn.innerHTML = \"✓ Copied!\";\n                              setTimeout(\n                                () => (btn.innerHTML = original),\n                                2000,\n                              );\n                            }}\n                            data-testid=\"copy-kali-clone\"\n                          >\n                            <i className=\"fas fa-copy mr-1\"></i>Copy\n                          </button>\n                        </div>\n                        <code className=\"text-blue-300 font-mono text-sm block break-all\">\n                          git clone\n                          https://github.com/technicalwhitehat-yt/CookPhish.git\n                          && cd CookPhish && sudo bash CookPhish\n                        </code>\n                        <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                          <strong>What this does:</strong> Downloads CookPhish from GitHub, enters the directory, and executes the tool with administrator privileges. The 'sudo' is required for system-level operations.\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* One-line command */}\n                    <div className=\"bg-blue-500/10 rounded-xl p-4 border border-blue-400/30 mt-6\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-bold text-blue-300\">\n                          💻 Recommended: One-Line Installation Automation\n                        </h4>\n                        <button\n                          className=\"copy-button\"\n                          onClick={(e) => {\n                            navigator.clipboard.writeText(\n                              \"sudo apt update && sudo apt upgrade -y && sudo apt install git -y && git clone https://github.com/technicalwhitehat-yt/CookPhish.git && cd CookPhish && sudo bash CookPhish\",\n                            );\n                            const btn = e.target as HTMLButtonElement;\n                            const original = btn.innerHTML;\n                            btn.innerHTML = \"✓ Copied!\";\n                            setTimeout(() => (btn.innerHTML = original), 2000);\n                          }}\n                          data-testid=\"copy-kali-all\"\n                        >\n                          <i className=\"fas fa-copy mr-1\"></i>Copy All\n                        </button>\n                      </div>\n                      <code className=\"text-blue-300 font-mono text-xs block break-all\">\n                        sudo apt update && sudo apt upgrade -y && sudo apt\n                        install git -y && git clone\n                        https://github.com/technicalwhitehat-yt/CookPhish.git &&\n                        cd CookPhish && sudo bash CookPhish\n                      </code>\n                      <div className=\"mt-2 text-xs text-white/70 bg-black/20 rounded p-2\">\n                        <strong>Complete Automation:</strong> This command performs the entire installation process in one go. Perfect for experienced users who want quick deployment without manual intervention.\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n\n          {/* Requirements & Tips */}\n          <motion.div\n            className=\"mt-12 max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card className=\"bg-white/10 backdrop-blur-md border border-yellow-300/40 rounded-2xl shadow-xl shadow-yellow-500/20 hover:shadow-2xl hover:shadow-yellow-400/30 transition-all duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-yellow-500/30 to-yellow-600/20 rounded-xl flex items-center justify-center mr-3 shadow-lg shadow-yellow-500/30\">\n                      <i className=\"fas fa-cog text-lg text-yellow-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold text-white\">\n                        Dependencies\n                      </h3>\n                      <p className=\"text-xs text-white/60\">Required packages</p>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-black/30 rounded-lg p-3 border border-yellow-400/30\">\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-yellow-300 font-semibold text-xs\">\n                        Fix Dependencies (if tool fails to run)\n                      </span>\n                      <button\n                        className=\"copy-button text-xs\"\n                        onClick={(e) => {\n                          navigator.clipboard.writeText(\n                            \"pip install -r requirements.txt\",\n                          );\n                          const btn = e.target as HTMLButtonElement;\n                          const original = btn.innerHTML;\n                          btn.innerHTML = \"✓\";\n                          setTimeout(() => (btn.innerHTML = original), 2000);\n                        }}\n                        data-testid=\"copy-requirements\"\n                      >\n                        <i className=\"fas fa-copy\"></i>\n                      </button>\n                    </div>\n                    <code className=\"text-yellow-300 font-mono text-xs block\">\n                      pip install -r requirements.txt\n                    </code>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500/30 to-purple-600/20 rounded-xl flex items-center justify-center mr-3 shadow-lg shadow-purple-500/30\">\n                      <i className=\"fas fa-lightbulb text-lg text-purple-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold text-white\">Pro Tips</h3>\n                      <p className=\"text-xs text-white/60\">Important notes</p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2 text-xs text-white/80\">\n                    <div className=\"flex items-start space-x-2\">\n                      <span className=\"text-purple-400\">•</span>\n                      <span>Use Git clone for auto-update functionality</span>\n                    </div>\n                    <div className=\"flex items-start space-x-2\">\n                      <span className=\"text-purple-400\">•</span>\n                      <span>Run with sudo on Linux for full permissions</span>\n                    </div>\n                    <div className=\"flex items-start space-x-2\">\n                      <span className=\"text-purple-400\">•</span>\n                      <span>\n                        Ensure stable internet connection during setup\n                      </span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Usage Section */}\n      <section id=\"usage\" className=\"py-20 bg-black/10 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-purple-400/20 text-purple-300 border-purple-400/30 mb-4\">\n              🚀 How to Use\n            </Badge>\n            <h2 className=\"text-4xl font-bold mb-4\">\n              Usage{\" \"}\n              <span className=\"text-white drop-shadow-2xl\">Instructions</span>\n            </h2>\n            <p className=\"text-xl text-white/80 max-w-2xl mx-auto\">\n              Step-by-step guide to run phishing simulations and understand the tool's features\n            </p>\n          </motion.div>\n\n          <div className=\"grid lg:grid-cols-2 gap-8 mb-12\">\n            {/* Basic Usage */}\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300 hover:border-purple-300/60\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500/30 to-purple-600/20 rounded-2xl flex items-center justify-center mr-4 shadow-lg shadow-purple-500/30\">\n                      <i className=\"fas fa-play text-2xl text-purple-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-white\">\n                        Basic Usage\n                      </h3>\n                      <p className=\"text-sm text-white/60\">\n                        Getting started with CookPhish\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-black/30 rounded-lg p-4 border border-purple-400/30\">\n                      <h4 className=\"font-bold text-purple-300 mb-3\">\n                        📋 After Installation:\n                      </h4>\n                      <ol className=\"text-sm text-white/80 space-y-2\">\n                        <li>1. Run the script: <code className=\"bg-black/50 px-2 py-1 rounded text-purple-300\">bash CookPhish</code></li>\n                        <li>2. Select phishing template (Instagram, Facebook, etc.)</li>\n                        <li>3. Choose tunneling service (Cloudflared/Tunnelmole)</li>\n                        <li>4. Share the generated link with target</li>\n                        <li>5. Monitor captured credentials in real-time</li>\n                      </ol>\n                    </div>\n\n                    <div className=\"bg-purple-500/10 rounded-xl p-4 border border-purple-400/30\">\n                      <h4 className=\"font-bold text-purple-300 mb-3\">\n                        🎯 Tool Execution Options:\n                      </h4>\n                      <div className=\"text-sm text-white/80 space-y-3\">\n                        <div className=\"bg-black/30 rounded p-2\">\n                          <div><strong className=\"text-purple-300\">After running, select method:</strong></div>\n                          <div>1. <span className=\"text-green-300\">Localhost</span> - Works only on local network (LAN)</div>\n                          <div>2. <span className=\"text-blue-300\">Cloudflare</span> - Best for global/WAN access</div>\n                          <div>3. <span className=\"text-yellow-300\">Tunnelmole</span> - Backup if Cloudflare fails</div>\n                        </div>\n                        <div className=\"text-xs\">\n                          <strong>Generated Link:</strong> Creates URLs like <code className=\"text-cyan-300\">https://cloud-justin-governments-entities.trycloudflare.com</code>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Advanced Features */}\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-md border border-cyan-300/40 rounded-2xl shadow-xl shadow-cyan-500/20 hover:shadow-2xl hover:shadow-cyan-400/30 transition-all duration-300 hover:border-cyan-300/60\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-cyan-500/30 to-cyan-600/20 rounded-2xl flex items-center justify-center mr-4 shadow-lg shadow-cyan-500/30\">\n                      <i className=\"fas fa-cogs text-2xl text-cyan-400\"></i>\n                    </div>\n                    <div>\n                      <h3 className=\"text-2xl font-bold text-white\">\n                        Advanced Features\n                      </h3>\n                      <p className=\"text-sm text-white/60\">\n                        Professional testing capabilities\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-black/30 rounded-lg p-4 border border-cyan-400/30\">\n                      <h4 className=\"font-bold text-cyan-300 mb-3\">\n                        🔐 2FA Bypass Methods:\n                      </h4>\n                      <ul className=\"text-sm text-white/80 space-y-2\">\n                        <li>• TOTP (Google Authenticator/Authy)</li>\n                        <li>• SMS verification bypass</li>\n                        <li>• WhatsApp OTP interception</li>\n                        <li>• Email verification bypass</li>\n                        <li>• Cookie-based session hijacking</li>\n                      </ul>\n                    </div>\n\n                    <div className=\"bg-cyan-500/10 rounded-xl p-4 border border-cyan-400/30\">\n                      <h4 className=\"font-bold text-cyan-300 mb-3\">\n                        📊 Real-time Monitoring:\n                      </h4>\n                      <div className=\"text-sm text-white/80 space-y-2\">\n                        <div><strong>When target visits link:</strong></div>\n                        <ul className=\"text-xs space-y-1 ml-4\">\n                          <li>• Shows Instagram-like login page</li>\n                          <li>• Terminal displays: timestamp, user agent, device info, Android version</li>\n                          <li>• Captures IP address and location data</li>\n                          <li>• Wrong password = red \"wrong password\" message</li>\n                          <li>• Correct password = green success with credentials captured</li>\n                          <li>• If 2FA enabled: prompts for verification code</li>\n                          <li>• All data saved to output files automatically</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n\n          {/* Cookie-based Login Section */}\n          <motion.div\n            className=\"max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Card className=\"bg-gradient-to-r from-orange-500/5 to-red-500/5 backdrop-blur-md border border-orange-400/40 rounded-2xl shadow-xl shadow-orange-500/20 hover:shadow-2xl hover:shadow-orange-400/30 transition-all duration-300\">\n              <CardContent className=\"p-8 bg-black/50 rounded-2xl backdrop-blur-sm\">\n                <div className=\"text-center mb-6\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-orange-500/30 to-red-500/20 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-lg shadow-orange-500/30\">\n                    <i className=\"fas fa-cookie-bite text-2xl text-orange-400\"></i>\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-white mb-2\">\n                    Cookie-Based Login Feature\n                  </h3>\n                  <p className=\"text-white/80\">\n                    Advanced session hijacking and authentication bypass technique\n                  </p>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div className=\"bg-black/30 rounded-lg p-4 border border-orange-400/30\">\n                    <h4 className=\"font-bold text-orange-300 mb-3\">\n                      🍪 How it Works:\n                    </h4>\n                    <ul className=\"text-sm text-white/80 space-y-2\">\n                      <li>• Captures session cookies during login</li>\n                      <li>• Bypasses 2FA using valid sessions</li>\n                      <li>• Maintains persistent access</li>\n                      <li>• Works with all social media platforms</li>\n                    </ul>\n                  </div>\n\n                  <div className=\"bg-black/30 rounded-lg p-4 border border-orange-400/30\">\n                    <h4 className=\"font-bold text-orange-300 mb-3\">\n                      ⚠️ Ethical Usage:\n                    </h4>\n                    <ul className=\"text-sm text-white/80 space-y-2\">\n                      <li>• Only for authorized testing</li>\n                      <li>• Educational purposes only</li>\n                      <li>• Get explicit permission</li>\n                      <li>• Follow responsible disclosure</li>\n                    </ul>\n                  </div>\n                </div>\n\n                <div className=\"grid md:grid-cols-1 gap-4 mt-6\">\n                  <div className=\"bg-black/30 rounded-lg p-4 border border-orange-400/30\">\n                    <h4 className=\"font-bold text-orange-300 mb-3\">\n                      🍪 How to Use Cookie-Based Login:\n                    </h4>\n                    <div className=\"text-sm text-white/80 space-y-3\">\n                      <div><strong>Step 1:</strong> Install browser with extension support:</div>\n                      <div className=\"ml-4 space-y-1\">\n                        <div>• <strong className=\"text-green-300\">Lemur Browser (Recommended):</strong></div>\n                        <a href=\"https://play.google.com/store/apps/details?id=com.lemurbrowser.exts\" \n                           className=\"text-cyan-300 hover:text-cyan-200 underline text-xs block ml-2\">\n                          https://play.google.com/store/apps/details?id=com.lemurbrowser.exts\n                        </a>\n                        <div>• Alternatives: Kiwi Browser, Firefox Browser</div>\n                      </div>\n                      \n                      <div><strong>Step 2:</strong> Install Cookies Editor Extension:</div>\n                      <div className=\"ml-4\">\n                        <a href=\"https://chromewebstore.google.com/detail/cookie-editor/gigiddbkofmmehoipndncpadfopebjfh\" \n                           className=\"text-cyan-300 hover:text-cyan-200 underline text-xs\">\n                          Cookie Editor Extension Link\n                        </a>\n                      </div>\n                      \n                      <div><strong>Step 3:</strong> After CookPhish captures session:</div>\n                      <div className=\"ml-4 text-xs\">\n                        • Copy the session ID value from CookPhish\n                        <br/>• Open Instagram in Lemur Browser\n                        <br/>• Use Cookies Editor to add the captured session\n                        <br/>• Refresh page - you'll be logged in without password\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-orange-500/10 rounded-xl p-4 border border-orange-400/30\">\n                    <div className=\"flex items-center mb-2\">\n                      <i className=\"fas fa-exclamation-triangle text-orange-400 mr-2\"></i>\n                      <h4 className=\"font-bold text-orange-300\">Ethical Usage Only:</h4>\n                    </div>\n                    <p className=\"text-sm text-white/80\">\n                      This feature is designed for cybersecurity professionals and authorized testing only. \n                      Misuse for malicious purposes is strictly prohibited and may violate laws. Always get explicit permission before testing.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Usage Section */}\n      <section id=\"usage\" className=\"py-20 bg-black/10 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-blue-400/20 text-blue-300 border-blue-400/30 mb-4\">\n              🚀 Usage Guide\n            </Badge>\n            <h2 className=\"text-4xl font-bold mb-4\">\n              How to{\" \"}\n              <span className=\"text-white drop-shadow-2xl\">Use CookPhish</span>\n            </h2>\n            <p className=\"text-xl text-white/80\">\n              Step-by-step guide to running successful phishing simulations\n            </p>\n          </motion.div>\n\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              {[\n                {\n                  step: \"1\",\n                  title: \"Launch Framework\",\n                  description:\n                    \"Execute ./CookPhish to start the colorful UI and GitHub update check\",\n                  icon: \"fas fa-play\",\n                },\n                {\n                  step: \"2\",\n                  title: \"Server Setup\",\n                  description:\n                    \"Local phishing server automatically starts on port 8080\",\n                  icon: \"fas fa-server\",\n                },\n                {\n                  step: \"3\",\n                  title: \"Tunneling\",\n                  description:\n                    \"Use cloudflared or tunnelmole to expose your server online\",\n                  icon: \"fas fa-globe\",\n                },\n                {\n                  step: \"4\",\n                  title: \"Monitor Logs\",\n                  description:\n                    \"Track victim data in output/ directory with detailed logging\",\n                  icon: \"fas fa-chart-line\",\n                },\n              ].map((item, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ delay: index * 0.1 }}\n                >\n                  <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl h-full shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300 hover:bg-white/15 hover:border-purple-300/60\">\n                    <CardContent className=\"p-8\">\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"flex-shrink-0 w-14 h-14 bg-gradient-to-br from-white/30 to-white/10 rounded-2xl flex items-center justify-center text-white font-bold text-lg shadow-lg\">\n                          {item.step}\n                        </div>\n                        <div className=\"flex-1\">\n                          <h3 className=\"text-xl font-bold mb-2 text-white\">\n                            {item.title}\n                          </h3>\n                          <p className=\"text-white/80\">{item.description}</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Pro Section */}\n      <section\n        id=\"pro\"\n        className=\"py-20 bg-gradient-to-br from-purple-600/20 via-pink-500/10 to-orange-500/20 backdrop-blur-sm border-t border-purple-400/30\"\n      >\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-purple-400/20 text-purple-300 border-purple-400/30 mb-4 text-lg px-6 py-2\">\n              🚀 Coming Soon\n            </Badge>\n            <h2 className=\"text-5xl font-bold mb-6\">\n              <span className=\"bg-gradient-to-r from-purple-400 via-pink-400 to-orange-400 bg-clip-text text-transparent\">\n                CookPhish Pro\n              </span>\n            </h2>\n            <p className=\"text-xl text-white/90 max-w-3xl mx-auto leading-relaxed\">\n              The ultimate phishing simulation framework with\n              <strong className=\"text-purple-400\"> mask URL generation</strong>,\n              <strong className=\"text-blue-400\"> unlimited hosting time</strong>\n              ,\n              <strong className=\"text-green-400\">\n                {\" \"}\n                cross-platform support\n              </strong>\n              , and\n              <strong className=\"text-red-400\">\n                {\" \"}\n                advanced victim tracking\n              </strong>\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n            {[\n              {\n                icon: \"fas fa-mask\",\n                title: \"Mask URL Generator\",\n                description:\n                  \"Create deceptive URLs like https://www.instagram.com@verify.net to bypass user suspicion with custom domain masking\",\n                color: \"purple\",\n              },\n              {\n                icon: \"fas fa-infinity\",\n                title: \"Unlimited Hosting\",\n                description:\n                  \"No time restrictions on hosting, unlimited campaigns with custom domain setup capabilities\",\n                color: \"blue\",\n              },\n              {\n                icon: \"fas fa-mobile-alt\",\n                title: \"Cross-Platform Support\",\n                description:\n                  \"Full compatibility with both Termux (Android) and Kali Linux with optimized performance\",\n                color: \"green\",\n              },\n              {\n                icon: \"fas fa-map-marker-alt\",\n                title: \"Advanced Victim Info\",\n                description:\n                  \"Detailed location tracking, device fingerprinting, mobile specs, browser info, and comprehensive data collection\",\n                color: \"red\",\n              },\n              {\n                icon: \"fas fa-eye\",\n                title: \"Awesome Look\",\n                description:\n                  \"Beautiful modern interface with stunning visuals and professional cybersecurity design themes\",\n                color: \"pink\",\n              },\n              {\n                icon: \"fas fa-rocket\",\n                title: \"Simple to Use\",\n                description:\n                  \"User-friendly interface with one-click setup, easy configuration, and many more advanced features\",\n                color: \"orange\",\n              },\n            ].map((feature, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl h-full shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30 transition-all duration-300 hover:bg-white/15 hover:border-purple-300/60\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div\n                      className={`w-12 h-12 bg-gradient-to-br from-${feature.color}-500/30 to-${feature.color}-600/20 rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-lg`}\n                    >\n                      <i\n                        className={`${feature.icon} text-lg text-${feature.color}-400`}\n                      ></i>\n                    </div>\n                    <h3 className=\"text-lg font-bold mb-3 text-white\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-white/80 text-sm leading-relaxed\">\n                      {feature.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n\n          <motion.div\n            className=\"text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.5 }}\n          >\n            <Link href=\"/pro\">\n              <Button\n                size=\"lg\"\n                className=\"group relative overflow-hidden bg-gradient-to-r from-purple-500 to-pink-500 border border-purple-400 text-white font-bold px-8 py-4 text-lg rounded-xl transition-all duration-300 hover:from-purple-400 hover:to-pink-400 hover:shadow-xl hover:shadow-purple-500/50 hover:scale-105 shadow-lg shadow-purple-500/30\"\n              >\n                <div className=\"absolute inset-0 bg-gradient-to-r from-purple-300/20 to-pink-300/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                <div className=\"absolute -inset-1 bg-gradient-to-r from-purple-500/40 to-pink-500/40 rounded-xl blur opacity-60 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                <div className=\"relative flex items-center space-x-3\">\n                  <i className=\"fas fa-crown text-xl drop-shadow-sm\"></i>\n                  <span>Learn More About Pro</span>\n                  <i className=\"fas fa-arrow-right text-lg group-hover:translate-x-1 transition-transform duration-300\"></i>\n                </div>\n              </Button>\n            </Link>\n\n            <p className=\"text-white/70 mt-4 text-sm\">\n              Follow our social media for updates and early access announcements\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Author Section - Proudly Indian */}\n      <section\n        id=\"author\"\n        className=\"py-20 bg-gradient-to-br from-orange-500/10 via-white/5 to-green-500/10 backdrop-blur-sm relative\"\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-r from-orange-500/5 via-white/2 to-green-500/5\"></div>\n        <div className=\"container mx-auto px-6 relative\">\n          <motion.div\n            className=\"max-w-5xl mx-auto text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-orange-500/20 text-orange-300 border-orange-400/40 mb-8 text-lg px-6 py-2\">\n              🇮🇳 Proudly Indian Developer\n            </Badge>\n\n            <Card className=\"indian-pride-bg backdrop-blur-md rounded-3xl shadow-2xl indian-flag-glow hover:shadow-3xl transition-all duration-500 border-2 border-orange-400/30\">\n              <CardContent className=\"p-12\">\n                {/* Profile Section */}\n                <div className=\"mb-10\">\n                  <div className=\"w-32 h-32 rounded-full mx-auto mb-8 shadow-2xl overflow-hidden border-4 tricolor-border relative\">\n                    <img\n                      src={twhLogo}\n                      alt=\"Ahmar - Technical White Hat Founder\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <div className=\"absolute bottom-0 right-0 w-8 h-8 bg-orange-500 rounded-full flex items-center justify-center text-white text-sm\">\n                      🇮🇳\n                    </div>\n                  </div>\n\n                  <h2 className=\"text-4xl font-bold mb-2 text-white\">Afsar</h2>\n                  <p className=\"text-2xl text-orange-300 mb-2 font-semibold\">\n                    Technical White Hat Founder\n                  </p>\n                  <p className=\"text-lg text-white/90 mb-6\">\n                    20 Years Old • Full Stack Developer • Ethical Hacker • From\n                    India 🇮🇳\n                  </p>\n\n                  <div className=\"bg-white/10 rounded-2xl p-6 backdrop-blur-sm border border-white/20 max-w-3xl mx-auto\">\n                    <p className=\"text-white/90 leading-relaxed text-lg\">\n                      Assalamu alaikum! I'm{\" \"}\n                      <strong className=\"text-orange-300\">Afsar Ali</strong>,\n                      also known as{\" \"}\n                      <strong className=\"text-green-300\">Ahmar Bhai</strong> by\n                      my community. At just 20, I founded{\" \"}\n                      <strong className=\"text-white\">\n                        Technical White Hat (TWH)\n                      </strong>{\" \"}\n                      with a passion for cybersecurity. I don't just create\n                      hacking tools - I'm a complete developer who builds\n                      websites, mobile apps, AI solutions, and teaches ethical\n                      hacking. Whatever I do, I do it with my heart because I\n                      love working on my own terms. CookPhish is just one of\n                      many projects I've created!\n                    </p>\n                  </div>\n                </div>\n\n                {/* Skills Section */}\n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bold text-white mb-4\">\n                    💻 What I Do\n                  </h3>\n                  <div className=\"grid md:grid-cols-4 gap-4\">\n                    <div className=\"bg-white/10 rounded-xl p-4 backdrop-blur-sm border border-orange-400/30\">\n                      <i className=\"fas fa-shield-alt text-2xl text-red-400 mb-2\"></i>\n                      <p className=\"text-sm text-white font-semibold\">\n                        Ethical Hacking\n                      </p>\n                    </div>\n                    <div className=\"bg-white/10 rounded-xl p-4 backdrop-blur-sm border border-orange-400/30\">\n                      <i className=\"fas fa-code text-2xl text-blue-400 mb-2\"></i>\n                      <p className=\"text-sm text-white font-semibold\">\n                        Web Development\n                      </p>\n                    </div>\n                    <div className=\"bg-white/10 rounded-xl p-4 backdrop-blur-sm border border-orange-400/30\">\n                      <i className=\"fas fa-mobile-alt text-2xl text-green-400 mb-2\"></i>\n                      <p className=\"text-sm text-white font-semibold\">\n                        App Development\n                      </p>\n                    </div>\n                    <div className=\"bg-white/10 rounded-xl p-4 backdrop-blur-sm border border-orange-400/30\">\n                      <i className=\"fas fa-robot text-2xl text-purple-400 mb-2\"></i>\n                      <p className=\"text-sm text-white font-semibold\">\n                        AI Solutions\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <Separator className=\"my-8 bg-gradient-to-r from-orange-400 via-white to-green-400\" />\n\n                {/* Social Media Buttons */}\n                <div className=\"flex flex-wrap justify-center gap-4\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"modern-button social-button youtube-button px-6 py-3\"\n                    asChild\n                  >\n                    <a\n                      href=\"https://youtube.com/@technicalwhitehat\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      data-testid=\"author-youtube\"\n                    >\n                      <i className=\"fab fa-youtube text-red-400 mr-3 text-lg\"></i>\n                      YouTube\n                    </a>\n                  </Button>\n\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"modern-button social-button instagram-button px-6 py-3\"\n                    asChild\n                  >\n                    <a\n                      href=\"https://instagram.com/technicalwhitehat\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      data-testid=\"author-instagram\"\n                    >\n                      <i className=\"fab fa-instagram text-pink-500 mr-3 text-lg\"></i>\n                      Instagram\n                    </a>\n                  </Button>\n\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"modern-button social-button whatsapp-button px-6 py-3\"\n                    asChild\n                  >\n                    <a\n                      href=\"https://wa.me/917890144166\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      data-testid=\"author-whatsapp\"\n                    >\n                      <i className=\"fab fa-whatsapp text-green-400 mr-3 text-lg\"></i>\n                      WhatsApp\n                    </a>\n                  </Button>\n\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"modern-button social-button telegram-button px-6 py-3\"\n                    asChild\n                  >\n                    <a\n                      href=\"https://t.me/technicalwhitehat\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      data-testid=\"author-telegram\"\n                    >\n                      <i className=\"fab fa-telegram text-blue-400 mr-3 text-lg\"></i>\n                      Telegram\n                    </a>\n                  </Button>\n\n                  <Button\n                    variant=\"outline\"\n                    size=\"lg\"\n                    className=\"modern-button social-button github-button px-6 py-3\"\n                    asChild\n                  >\n                    <a\n                      href=\"https://github.com/technicalwhitehat-yt\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      data-testid=\"author-github\"\n                    >\n                      <i className=\"fab fa-github text-white mr-3 text-lg\"></i>\n                      GitHub\n                    </a>\n                  </Button>\n                </div>\n\n                {/* Quote Section */}\n                <div className=\"mt-8 bg-gradient-to-r from-orange-500/20 via-white/10 to-green-500/20 rounded-2xl p-6 border border-orange-400/30\">\n                  <blockquote className=\"text-white/90 italic text-lg\">\n                    \"Bharat aage tha, aage hai, aur aage rahega — aur jab-jab\n                    koi hamare desh ko neecha dikhane ki koshish karega, tab-tab\n                    hum aisa karege jo duniya ne kabhi socha bhi nahi hoga.\"\n                    <br />\n                    Jai Hind, Jai Bharat\n                  </blockquote>\n                  <p className=\"text-orange-300 mt-2 font-semibold\">\n                    - Afsar, Founder of Technical White Hat\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Security Education Section */}\n      <section className=\"py-20 bg-red-500/20 backdrop-blur-sm border-t-2 border-red-400/30\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            className=\"max-w-4xl mx-auto text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"mb-8\">\n              <i className=\"fas fa-exclamation-triangle text-4xl text-red-300 mb-4\"></i>\n              <h2 className=\"text-3xl font-bold text-white mb-4\">\n                ⚠️ Ethical Use Only\n              </h2>\n              <p className=\"text-lg text-white/90 leading-relaxed\">\n                CookPhish is strictly designed for{\" \"}\n                <strong>cybersecurity education</strong>,{\" \"}\n                <strong>authorized penetration testing</strong>, and{\" \"}\n                <strong>security awareness training</strong>. Any illegal or\n                unauthorized use is prohibited and against the tool's purpose.\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <Card className=\"border border-red-400/30 bg-white/10 backdrop-blur-md rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <i className=\"fas fa-graduation-cap text-2xl text-red-300 mb-3\"></i>\n                  <h3 className=\"font-bold text-white\">Educational Purpose</h3>\n                  <p className=\"text-sm text-white/80\">\n                    Learn about phishing techniques and defense mechanisms\n                  </p>\n                </CardContent>\n              </Card>\n              <Card className=\"border border-red-400/30 bg-white/10 backdrop-blur-md rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <i className=\"fas fa-shield-alt text-2xl text-red-300 mb-3\"></i>\n                  <h3 className=\"font-bold text-white\">Authorized Testing</h3>\n                  <p className=\"text-sm text-white/80\">\n                    Only use with proper authorization and consent\n                  </p>\n                </CardContent>\n              </Card>\n              <Card className=\"border border-red-400/30 bg-white/10 backdrop-blur-md rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300\">\n                <CardContent className=\"p-6 text-center\">\n                  <i className=\"fas fa-users text-2xl text-red-300 mb-3\"></i>\n                  <h3 className=\"font-bold text-white\">Security Awareness</h3>\n                  <p className=\"text-sm text-white/80\">\n                    Train users to identify and prevent phishing attacks\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"py-12 bg-black/30 backdrop-blur-sm border-t border-white/20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <div className=\"mb-4 md:mb-0\">\n              <div className=\"text-2xl font-bold text-white mb-2\">\n                CookPhish\n              </div>\n              <p className=\"text-white/60\">\n                Advanced Phishing Simulation Framework\n              </p>\n            </div>\n            <div className=\"text-center text-white/60\">\n              <p>&copy; 2024 Technical White Hat. For educational use only.</p>\n              <p className=\"text-sm mt-1\">Made with ❤️ in India</p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":97275},"client/src/pages/Pro.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport twhLogo from \"@assets/technical white hat 2.0_1754987246786.jpg\";\n\nexport default function Pro() {\n  return (\n    <div className=\"min-h-screen modern-bg\">\n      <div className=\"min-h-screen text-white relative\">\n        {/* Hero Section */}\n        <section className=\"py-16 sm:py-20 px-4 sm:px-6\">\n          <div className=\"container mx-auto\">\n            <motion.div\n              className=\"max-w-4xl mx-auto text-center\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n            >\n              <Badge className=\"bg-purple-400/20 text-purple-300 border-purple-400/30 mb-6 sm:mb-8 text-base sm:text-lg px-4 sm:px-6 py-2\">\n                🚀 CookPhish Pro\n              </Badge>\n\n              <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold mb-6 sm:mb-8 px-2\">\n                <span className=\"bg-gradient-to-r from-purple-400 via-pink-400 to-orange-400 bg-clip-text text-transparent\">\n                  Coming Soon\n                </span>\n              </h1>\n\n              <p className=\"text-lg sm:text-xl md:text-2xl text-white/90 mb-8 sm:mb-12 leading-relaxed px-4\">\n                The ultimate phishing simulation framework with\n                <strong className=\"text-purple-400\">\n                  {\" \"}\n                  mask URL generation\n                </strong>\n                ,<strong className=\"text-blue-400\"> unlimited hosting</strong>,\n                and\n                <strong className=\"text-orange-400\">\n                  {\" \"}\n                  advanced victim tracking\n                </strong>\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Features Preview */}\n        <section className=\"py-16 sm:py-20 bg-white/5 backdrop-blur-sm\">\n          <div className=\"container mx-auto px-4 sm:px-6\">\n            <motion.div\n              className=\"max-w-6xl mx-auto\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.3 }}\n            >\n              <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-bold text-center mb-12 sm:mb-16 px-4\">\n                What's Coming in{\" \"}\n                <span className=\"text-purple-400\">CookPhish Pro</span>\n              </h2>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8\">\n                {[\n                  {\n                    icon: \"fas fa-mask\",\n                    title: \"Mask URL Generator\",\n                    description:\n                      \"Create deceptive URLs like https://www.instagram.com@verify.net to bypass user suspicion with custom domain masking\",\n                    color: \"purple\",\n                  },\n                  {\n                    icon: \"fas fa-infinity\",\n                    title: \"Unlimited Hosting\",\n                    description:\n                      \"No time restrictions on hosting, unlimited campaigns with custom domain setup capabilities\",\n                    color: \"blue\",\n                  },\n                  {\n                    icon: \"fas fa-mobile-alt\",\n                    title: \"Cross-Platform Support\",\n                    description:\n                      \"Full compatibility with both Termux (Android) and Kali Linux with optimized performance\",\n                    color: \"green\",\n                  },\n                  {\n                    icon: \"fas fa-map-marker-alt\",\n                    title: \"Advanced Victim Info\",\n                    description:\n                      \"Detailed location tracking, device fingerprinting, mobile specs, browser info, and comprehensive data collection\",\n                    color: \"red\",\n                  },\n                  {\n                    icon: \"fas fa-eye\",\n                    title: \"Awesome Look\",\n                    description:\n                      \"Beautiful modern interface with stunning visuals and professional cybersecurity design themes\",\n                    color: \"pink\",\n                  },\n                  {\n                    icon: \"fas fa-rocket\",\n                    title: \"Simple to Use\",\n                    description:\n                      \"User-friendly interface with one-click setup, easy configuration, and many more advanced features\",\n                    color: \"orange\",\n                  },\n                ].map((feature, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, y: 30 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.8, delay: 0.1 * index }}\n                  >\n                    <Card className=\"bg-white/10 backdrop-blur-md border border-purple-300/40 rounded-2xl h-full hover:bg-white/15 hover:border-purple-300/60 transition-all duration-300 shadow-xl shadow-purple-500/20 hover:shadow-2xl hover:shadow-purple-400/30\">\n                      <CardContent className=\"p-6 sm:p-8 text-center\">\n                        <div\n                          className={`w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-br from-${feature.color}-500/30 to-${feature.color}-600/20 rounded-2xl flex items-center justify-center mx-auto mb-4 sm:mb-6 shadow-lg`}\n                        >\n                          <i\n                            className={`${feature.icon} text-lg sm:text-2xl text-${feature.color}-400`}\n                          ></i>\n                        </div>\n                        <h3 className=\"text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-white\">\n                          {feature.title}\n                        </h3>\n                        <p className=\"text-sm sm:text-base text-white/80 leading-relaxed\">\n                          {feature.description}\n                        </p>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Author Section */}\n        <section className=\"py-16 sm:py-20 bg-gradient-to-br from-orange-500/10 via-white/5 to-green-500/10 backdrop-blur-sm\">\n          <div className=\"container mx-auto px-4 sm:px-6\">\n            <motion.div\n              className=\"max-w-4xl mx-auto text-center\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.5 }}\n            >\n              <Card className=\"indian-pride-bg backdrop-blur-md rounded-2xl sm:rounded-3xl shadow-2xl indian-flag-glow border-2 border-orange-400/30\">\n                <CardContent className=\"p-6 sm:p-8 md:p-12\">\n                  <div className=\"w-20 h-20 sm:w-24 sm:h-24 rounded-full mx-auto mb-4 sm:mb-6 shadow-2xl overflow-hidden border-4 tricolor-border relative\">\n                    <img\n                      src={twhLogo}\n                      alt=\"Ahmar - Technical White Hat Founder\"\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <div className=\"absolute bottom-0 right-0 w-6 h-6 sm:w-8 sm:h-8 bg-orange-500 rounded-full flex items-center justify-center text-white text-xs sm:text-sm\">\n                      🇮🇳\n                    </div>\n                  </div>\n\n                  <h2 className=\"text-2xl sm:text-3xl font-bold mb-2 text-white\">\n                    Afsar\n                  </h2>\n                  <p className=\"text-lg sm:text-xl text-orange-300 mb-2 font-semibold\">\n                    Technical White Hat Founder\n                  </p>\n                  <p className=\"text-sm sm:text-base text-white/90 mb-6\">\n                    20 Years Old • Full Stack Developer • Ethical Hacker • From\n                    India 🇮🇳\n                  </p>\n\n                  <div className=\"bg-white/10 rounded-2xl p-4 sm:p-6 backdrop-blur-sm border border-white/20 mb-6 sm:mb-8\">\n                    <p className=\"text-white/90 leading-relaxed text-base sm:text-lg\">\n                      CookPhish Pro is in active development. Follow me on\n                      social media and GitHub for updates and early access\n                      announcements!\n                    </p>\n                  </div>\n\n                  {/* Social Media Links */}\n                  <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 md:gap-4\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"social-button youtube-button px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-xs sm:text-sm\"\n                      asChild\n                    >\n                      <a\n                        href=\"https://youtube.com/@technicalwhitehat\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"pro-youtube\"\n                      >\n                        <i className=\"fab fa-youtube text-red-400 mr-2 text-sm sm:text-lg\"></i>\n                        <span className=\"hidden sm:inline\">YouTube</span>\n                        <span className=\"sm:hidden\">YT</span>\n                      </a>\n                    </Button>\n\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"social-button instagram-button px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-xs sm:text-sm\"\n                      asChild\n                    >\n                      <a\n                        href=\"https://instagram.com/technicalwhitehat\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"pro-instagram\"\n                      >\n                        <i className=\"fab fa-instagram text-pink-500 mr-2 text-sm sm:text-lg\"></i>\n                        <span className=\"hidden sm:inline\">Instagram</span>\n                        <span className=\"sm:hidden\">IG</span>\n                      </a>\n                    </Button>\n\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"social-button whatsapp-button px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-xs sm:text-sm\"\n                      asChild\n                    >\n                      <a\n                        href=\"https://wa.me/917890144166\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"pro-whatsapp\"\n                      >\n                        <i className=\"fab fa-whatsapp text-green-400 mr-2 text-sm sm:text-lg\"></i>\n                        <span className=\"hidden sm:inline\">WhatsApp</span>\n                        <span className=\"sm:hidden\">WA</span>\n                      </a>\n                    </Button>\n\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"social-button telegram-button px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-xs sm:text-sm\"\n                      asChild\n                    >\n                      <a\n                        href=\"https://t.me/technicalwhitehat\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"pro-telegram\"\n                      >\n                        <i className=\"fab fa-telegram text-blue-400 mr-2 text-sm sm:text-lg\"></i>\n                        <span className=\"hidden sm:inline\">Telegram</span>\n                        <span className=\"sm:hidden\">TG</span>\n                      </a>\n                    </Button>\n\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"social-button github-button px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-xs sm:text-sm\"\n                      asChild\n                    >\n                      <a\n                        href=\"https://github.com/technicalwhitehat-yt\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"pro-github\"\n                      >\n                        <i className=\"fab fa-github text-white mr-2 text-sm sm:text-lg\"></i>\n                        <span className=\"hidden sm:inline\">GitHub</span>\n                        <span className=\"sm:hidden\">GH</span>\n                      </a>\n                    </Button>\n                  </div>\n\n                  {/* Repository Link */}\n                  <div className=\"mt-6 sm:mt-8\">\n                    <Button\n                      size=\"lg\"\n                      className=\"hero-button-primary px-6 sm:px-8 py-3 sm:py-4 text-base sm:text-lg font-semibold w-full sm:w-auto\"\n                      asChild\n                    >\n                      <a\n                        href=\"https://github.com/technicalwhitehat-yt/CookPhish\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        data-testid=\"pro-repository\"\n                      >\n                        <i className=\"fab fa-github mr-2 sm:mr-3 text-lg sm:text-xl\"></i>\n                        View Repository\n                      </a>\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Footer */}\n        <footer className=\"py-8 sm:py-12 bg-black/30 backdrop-blur-sm border-t border-white/20\">\n          <div className=\"container mx-auto px-4 sm:px-6\">\n            <div className=\"flex flex-col sm:flex-row justify-between items-center text-center sm:text-left\">\n              <div className=\"mb-4 sm:mb-0\">\n                <div className=\"text-xl sm:text-2xl font-bold text-white mb-1 sm:mb-2\">\n                  CookPhish Pro\n                </div>\n                <p className=\"text-white/60 text-sm sm:text-base\">\n                  Advanced Phishing Simulation Framework\n                </p>\n              </div>\n              <div className=\"text-white/60\">\n                <p className=\"text-sm\">\n                  &copy; 2024 Technical White Hat. For educational use only.\n                </p>\n                <p className=\"text-xs sm:text-sm mt-1\">\n                  Made with ❤️ in India 🇮🇳\n                </p>\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n","size_bytes":14761},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/utils/audioManager.ts":{"content":"export class AudioManager {\n  private audioContext: AudioContext | null = null;\n  private isInitialized = false;\n\n  constructor() {\n    this.initializeAudioContext();\n  }\n\n  private async initializeAudioContext() {\n    try {\n      // Check if AudioContext is supported\n      const AudioContextClass = window.AudioContext || (window as any).webkitAudioContext;\n      if (!AudioContextClass) {\n        console.warn('Web Audio API not supported');\n        return;\n      }\n\n      this.audioContext = new AudioContextClass();\n      \n      // Resume audio context if it's suspended\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n\n      this.isInitialized = true;\n    } catch (error) {\n      console.warn('Failed to initialize audio context:', error);\n    }\n  }\n\n  private createBeep(frequency: number, duration: number, type: OscillatorType = 'sine'): Promise<void> {\n    return new Promise((resolve) => {\n      if (!this.audioContext || !this.isInitialized) {\n        resolve();\n        return;\n      }\n\n      try {\n        const oscillator = this.audioContext.createOscillator();\n        const gainNode = this.audioContext.createGain();\n\n        oscillator.connect(gainNode);\n        gainNode.connect(this.audioContext.destination);\n\n        oscillator.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\n        oscillator.type = type;\n\n        gainNode.gain.setValueAtTime(0.1, this.audioContext.currentTime);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n\n        oscillator.start(this.audioContext.currentTime);\n        oscillator.stop(this.audioContext.currentTime + duration);\n\n        oscillator.onended = () => resolve();\n      } catch (error) {\n        console.warn('Failed to create beep:', error);\n        resolve();\n      }\n    });\n  }\n\n  async playClickSound(): Promise<void> {\n    try {\n      // Ensure audio context is ready\n      if (this.audioContext && this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      \n      // Create a cyber-style click sound (higher frequency, short duration)\n      await this.createBeep(800, 0.1, 'square');\n    } catch (error) {\n      console.warn('Failed to play click sound:', error);\n    }\n  }\n\n  async playHoverSound(): Promise<void> {\n    try {\n      // Ensure audio context is ready\n      if (this.audioContext && this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      \n      // Create a subtle hover sound (medium frequency, very short duration)\n      await this.createBeep(600, 0.05, 'sine');\n    } catch (error) {\n      console.warn('Failed to play hover sound:', error);\n    }\n  }\n\n  async playNotificationSound(): Promise<void> {\n    try {\n      // Ensure audio context is ready\n      if (this.audioContext && this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      \n      // Create a notification sound (ascending tones)\n      await this.createBeep(500, 0.15, 'sine');\n      setTimeout(async () => {\n        await this.createBeep(700, 0.15, 'sine');\n      }, 100);\n    } catch (error) {\n      console.warn('Failed to play notification sound:', error);\n    }\n  }\n\n  destroy() {\n    if (this.audioContext) {\n      this.audioContext.close();\n      this.audioContext = null;\n      this.isInitialized = false;\n    }\n  }\n}\n","size_bytes":3428},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1127},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","size_bytes":1848},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }","size_bytes":755},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}